{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "NewOwnerRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "solutionAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "solutionIndex",
          "type": "uint256"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBaseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct Pairing.G2Point",
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "c",
              "type": "tuple"
            }
          ],
          "internalType": "struct Verifier.Proof",
          "name": "proof",
          "type": "tuple"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "internalType": "bool",
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "solHash",
          "type": "bytes32"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct Pairing.G2Point",
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "c",
              "type": "tuple"
            }
          ],
          "internalType": "struct Verifier.Proof",
          "name": "proof",
          "type": "tuple"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "mintVerifiedNFT",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct Pairing.G2Point",
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "c",
              "type": "tuple"
            }
          ],
          "internalType": "struct Verifier.Proof",
          "name": "proof",
          "type": "tuple"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "getSolutionHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "solHash",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"NewOwnerRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"solutionAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"solutionIndex\",\"type\":\"uint256\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"solHash\",\"type\":\"bytes32\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Pairing.G2Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"c\",\"type\":\"tuple\"}],\"internalType\":\"struct Verifier.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"getSolutionHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"solHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Pairing.G2Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"c\",\"type\":\"tuple\"}],\"internalType\":\"struct Verifier.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"mintVerifiedNFT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Pairing.G2Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"c\",\"type\":\"tuple\"}],\"internalType\":\"struct Verifier.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xd18636a981a3c2a27421f6ec4bc5cd94a00d7775f18e1aa355ffc371cd4bfb66\",\"urls\":[\"bzz-raw://d9eecb27936afb34a084a42f42da74a31658318fefeaa55a755a8da1c1c0d4fe\",\"dweb:/ipfs/QmSUNukJc8eRb1XDo1iAwCXKMADwdPDmM6Ycp89m46od6M\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xa41a69007d894aac1a865095ae1605edf6be8a81920ae6520a84b3745e4d1f35\",\"urls\":[\"bzz-raw://f89372877ad8b1c3c2bc77f9008fbdf838f67fe5924d8f681dec4b0e9e757570\",\"dweb:/ipfs/QmQ6Zettxit1EmMX5xqMzwFcjX5bJCukXFfYsV2AZJDzdE\"]},\"project:/contracts/SquareVerifier.sol\":{\"keccak256\":\"0x3d8eecd60147eb5bb44137d9e8b0fcd72374edf9bf7f19763a518c1c409fb61b\",\"urls\":[\"bzz-raw://1060b7cacf6da765d85433c5807b6d0811acba00fa183c09865e6c6bac8e6bf5\",\"dweb:/ipfs/Qmd4Fzq8rGjKabrNyxnxDvF71ZQaqGthkGKkSDck5qoBkD\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060600160405280603f815260200162004e8c603f9139601390805190602001906200003592919062000300565b503480156200004357600080fd5b5060405162004ecb38038062004ecb833981810160405262000069919081019062000422565b8181818160138054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620001075780601f10620000db5761010080835404028352916020019162000107565b820191906000526020600020905b815481529060010190602001808311620000e957829003601f168201915b5050505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff0219169083151502179055506200017e6301ffc9a760e01b6200026060201b60201c565b620001966380ac58cd60e01b6200026060201b60201c565b620001ae63780e9d6360e01b6200026060201b60201c565b82600f9080519060200190620001c692919062000300565b508160109080519060200190620001df92919062000300565b508060119080519060200190620001f892919062000300565b5062000211635b5e139f60e01b6200026060201b60201c565b505050505082601660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000589565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200029457600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200034357805160ff191683800117855562000374565b8280016001018555821562000374579182015b828111156200037357825182559160200191906001019062000356565b5b50905062000383919062000387565b5090565b620003ac91905b80821115620003a85760008160009055506001016200038e565b5090565b90565b600081519050620003c0816200056f565b92915050565b600082601f830112620003d857600080fd5b8151620003ef620003e982620004d8565b620004aa565b915080825260208301602083018583830111156200040c57600080fd5b6200041983828462000539565b50505092915050565b6000806000606084860312156200043857600080fd5b60006200044886828701620003af565b935050602084015167ffffffffffffffff8111156200046657600080fd5b6200047486828701620003c6565b925050604084015167ffffffffffffffff8111156200049257600080fd5b620004a086828701620003c6565b9150509250925092565b6000604051905081810181811067ffffffffffffffff82111715620004ce57600080fd5b8060405250919050565b600067ffffffffffffffff821115620004f057600080fd5b601f19601f8301169050602081019050919050565b6000620005128262000519565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620005595780820151818401526020810190506200053c565b8381111562000569576000848401525b50505050565b6200057a8162000505565b81146200058657600080fd5b50565b6148f380620005996000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806343cd76fc116100f9578063a22cb46511610097578063bdc32be011610071578063bdc32be014610501578063c87b56dd1461051f578063e985e9c51461054f578063f2fde38b1461057f576101c4565b8063a22cb465146104ad578063a6ffc852146104c9578063b88d4fde146104e5576101c4565b806370a08231116100d357806370a08231146104375780638456cb5914610467578063893d20e81461047157806395d89b411461048f576101c4565b806343cd76fc146103a75780634f6ccce7146103d75780636352211e14610407576101c4565b806324171ab61161016657806338bbfa501161014057806338bbfa50146103355780633f4ba83a1461035157806340c10f191461035b57806342842e0e1461038b576101c4565b806324171ab6146102b957806327dc297e146102e95780632f745c5914610305576101c4565b8063095ea7b3116101a2578063095ea7b314610247578063106e426e1461026357806318160ddd1461027f57806323b872dd1461029d576101c4565b806301ffc9a7146101c957806306fdde03146101f9578063081812fc14610217575b600080fd5b6101e360048036036101de9190810190613ba4565b61059b565b6040516101f091906143a8565b60405180910390f35b610201610603565b60405161020e91906143de565b60405180910390f35b610231600480360361022c9190810190613c34565b6106a5565b60405161023e91906142fd565b60405180910390f35b610261600480360361025c9190810190613a07565b6106e2565b005b61027d600480360361027891908101906139cb565b610896565b005b610287610a47565b60405161029491906145ab565b60405180910390f35b6102b760048036036102b291908101906138c5565b610a54565b005b6102d360048036036102ce9190810190613bf6565b610a77565b6040516102e091906143c3565b60405180910390f35b61030360048036036102fe9190810190613ad1565b610ae4565b005b61031f600480360361031a9190810190613a07565b610b27565b60405161032c91906145ab565b60405180910390f35b61034f600480360361034a9190810190613b25565b610b9a565b005b610359610b9f565b005b61037560048036036103709190810190613a07565b610cd0565b60405161038291906143a8565b60405180910390f35b6103a560048036036103a091908101906138c5565b610d7e565b005b6103c160048036036103bc9190810190613bf6565b610d9e565b6040516103ce91906143a8565b60405180910390f35b6103f160048036036103ec9190810190613c34565b610e43565b6040516103fe91906145ab565b60405180910390f35b610421600480360361041c9190810190613c34565b610e77565b60405161042e91906142fd565b60405180910390f35b610451600480360361044c9190810190613860565b610eb4565b60405161045e91906145ab565b60405180910390f35b61046f610f04565b005b610479611037565b60405161048691906142fd565b60405180910390f35b610497611060565b6040516104a491906143de565b60405180910390f35b6104c760048036036104c2919081019061398f565b611102565b005b6104e360048036036104de9190810190613a43565b611238565b005b6104ff60048036036104fa9190810190613914565b611422565b005b610509611448565b60405161051691906143de565b60405180910390f35b61053960048036036105349190810190613c34565b6114ea565b60405161054691906143de565b60405180910390f35b61056960048036036105649190810190613889565b6115b1565b60405161057691906143a8565b60405180910390f35b61059960048036036105949190810190613860565b611645565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561069b5780601f106106705761010080835404028352916020019161069b565b820191906000526020600020905b81548152906001019060200180831161067e57829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006106ed82610e77565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075590614540565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1661077d611037565b73ffffffffffffffffffffffffffffffffffffffff1614806107a557506107a481336115b1565b5b6107e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107db90614500565b60405180910390fd5b336003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600060148054905090506108a8613311565b60405180606001604052808381526020018573ffffffffffffffffffffffffffffffffffffffff168152602001600015158152509050601481908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690831515021790555050505080601560008581526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055509050507f3a01cc868bdb36c1d9b8a262a8ad25064b23ac175b3f8e4453f1daf8ff6bac0d8483604051610a3992919061437f565b60405180910390a150505050565b6000600880549050905090565b610a5e33826117b8565b610a6757600080fd5b610a7283838361184d565b505050565b600082600001516000015183600001516020015184602001516000015185602001516020015186604001516000015187604001516020015187604051602001610ac6979695949392919061427c565b60405160208183030381529060405280519060200120905092915050565b610b23828260006040519080825280601f01601f191660200182016040528015610b1d5781602001600182028038833980820191505090505b50610b9a565b5050565b6000610b3283610eb4565b8210610b3d57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610b8757fe5b9060005260206000200154905092915050565b505050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c25906144e0565b60405180910390fd5b600060149054906101000a900460ff16610c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7490614480565b60405180910390fd5b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051610cc69190614318565b60405180910390a1565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d58906144e0565b60405180910390fd5b610d6b8383611871565b610d7482611892565b6001905092915050565b610d9983838360405180602001604052806000815250611422565b505050565b600060606002604051908082528060200260200182016040528015610dd25781602001602082028038833980820191505090505b50905060008090505b6002811015610e1a57838160028110610df057fe5b6020020151828281518110610e0157fe5b6020026020010181815250508080600101915050610ddb565b506000610e2782866119b0565b1415610e37576001915050610e3d565b60009150505b92915050565b6000610e4d610a47565b8210610e5857600080fd5b60088281548110610e6557fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610efd600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b22565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8a906144e0565b60405180910390fd5b600060149054906101000a900460ff1615610fe3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fda90614520565b60405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583360405161102d9190614318565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110f85780601f106110cd576101008083540402835291602001916110f8565b820191906000526020600020905b8154815290600101906020018083116110db57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561113b57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161122c91906143a8565b60405180910390a35050565b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc83836040518363ffffffff1660e01b8152600401611295929190614580565b60206040518083038186803b1580156112ad57600080fd5b505afa1580156112c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112e59190810190613aa8565b611324576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131b90614460565b60405180910390fd5b60006113308383610a77565b9050600073ffffffffffffffffffffffffffffffffffffffff166015600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146113d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ce90614560565b60405180910390fd5b6113e18582610896565b6113eb8585610cd0565b5060016015600083815260200190815260200160002060010160146101000a81548160ff0219169083151502179055505050505050565b61142d848484610a54565b61143984848484611b30565b61144257600080fd5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114e05780601f106114b5576101008083540402835291602001916114e0565b820191906000526020600020905b8154815290600101906020018083116114c357829003601f168201915b5050505050905090565b60606114f582611c47565b6114fe57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115a55780601f1061157a576101008083540402835291602001916115a5565b820191906000526020600020905b81548152906001019060200180831161158857829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146116d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116cb906144e0565b60405180910390fd5b6116dd81611cb9565b1561171d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611714906144a0565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb5dd3568787d73bfc318dde9151384113c6040cc0e486322c1eabfe6133d17146000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516117ad91906142fd565b60405180910390a150565b6000806117c483610e77565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061183357508373ffffffffffffffffffffffffffffffffffffffff1661181b846106a5565b73ffffffffffffffffffffffffffffffffffffffff16145b80611844575061184381856115b1565b5b91505092915050565b611858838383611d04565b6118628382611efd565b61186c828261209b565b505050565b61187b8282612162565b611885828261209b565b61188e81612314565b5050565b61189b81611c47565b6118da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118d190614440565b60405180910390fd5b61198660118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119735780601f1061194857610100808354040283529160200191611973565b820191906000526020600020905b81548152906001019060200180831161195657829003601f168201915b505050505061198183612360565b61248d565b6012600083815260200190815260200160002090805190602001906119ac92919061334a565b5050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506119de6133ca565b6119e66124d1565b90508060800151516001865101146119fd57600080fd5b611a05613411565b6040518060400160405280600081526020016000815250905060008090505b8651811015611a9b5783878281518110611a3a57fe5b602002602001015110611a4c57600080fd5b611a8c82611a8785608001516001850181518110611a6657fe5b60200260200101518a8581518110611a7a57fe5b602002602001015161291f565b6129b1565b91508080600101915050611a24565b50611abe818360800151600081518110611ab157fe5b60200260200101516129b1565b9050611b0485600001518660200151611ad684612a62565b8560400151611ae88a60400151612a62565b8760600151611afa8960000151612a62565b8960200151612afc565b611b145760019350505050611b1c565b600093505050505b92915050565b600081600001549050919050565b6000611b518473ffffffffffffffffffffffffffffffffffffffff16611cb9565b611b5e5760019050611c3f565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401611b9f9493929190614333565b602060405180830381600087803b158015611bb957600080fd5b505af1158015611bcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611bf19190810190613bcd565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015611cfb57506000801b8214155b92505050919050565b611d0d81610e77565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611d7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d71906144c0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611db457600080fd5b611dbd81612c60565b611e04600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612d1e565b611e4b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612d41565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611f556001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612d5790919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114612042576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611fc257fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061201a57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612094919061342b565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b61216b81611c47565b156121ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121a290614420565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561221b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161221290614400565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122b4600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612d41565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b606060008214156123a8576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612488565b600082905060005b600082146123d2578080600101915050600a82816123ca57fe5b0491506123b0565b6060816040519080825280601f01601f1916602001820160405280156124075781602001600182028038833980820191505090505b50905060006001830390505b6000861461248057600a868161242557fe5b0660300160f81b8282806001900393508151811061243f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161247857fe5b049550612413565b819450505050505b919050565b60606124c98383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612da1565b905092915050565b6124d96133ca565b60405180604001604052807f2543396cef98e72093c2b827fdcfff48ae61e674074881f2e2482947f99cad2881526020017f24d1379ad925b85e433aba922c14a6880b94fd99d965a6c8f02c28d6f320e67a8152508160000181905250604051806040016040528060405180604001604052807f0221de37216644acbc4313612980025d0386c47b8f3b278bdb25073063c29e0d81526020017f29036e2b41fe563f0f5abe1eaf2a1c0255f0fab3bef09cbc5de9d52b08e765b7815250815260200160405180604001604052807f038a4a6bcaaa06421fd170f44846468960ee2506722fd71541ece76b4edafced81526020017f0286a71c1a3489a7818328a0ec46b511088f2e331265c4abb550b4cf9bcc08918152508152508160200181905250604051806040016040528060405180604001604052807f1c8a81d8da11612501888bf89a724a00fc2306fcbee35c8c6e91109e1822274d81526020017f02303eb1c35025794418836c5c271571f2b9fc8bb36950fe6e32b251f32df87b815250815260200160405180604001604052807f2cf4a173e864b09e8b931badcb7fabca572a2db136e01be91bdd1bdd3b0993fd81526020017f1b632f420c712c1cb0c72d0f6779beba00ffc6ca78d7c2b4037f8b5b9055d5e18152508152508160400181905250604051806040016040528060405180604001604052807f2787c00d7beb4e91dd46363378c30d6313f6ec175ebff7c3cf86d590806617af81526020017f057cf7ff765744feb397fc26c3101fb0c964ea06eeb10ada46c534eef95721eb815250815260200160405180604001604052807f0f86f541f118292e7e5ac86690d414c9751ac90518470b4486dde746da631c7f81526020017f152dcbc453dd2705d4b8f883e7be5db54f516e686f7cf7816064aaab52304e1d815250815250816060018190525060036040519080825280602002602001820160405280156127c057816020015b6127ad613457565b8152602001906001900390816127a55790505b50816080018190525060405180604001604052807f2a7ed2fdc30e244a7df91674450bba493a7d2c2a9f6ba4d5fcea3a58abfdae3781526020017f15e3535eb4f1f76976a1d42d04ce22e6e6e72bef02907ce2e1b115749484d738815250816080015160008151811061282f57fe5b602002602001018190525060405180604001604052807f0e037f87f233cc3f338c9efb6807f82f0c6cf61dd9c6a80fa4ff5f2785dbb54a81526020017f030a3434c5878ecf4b3ac503e29de5cb5108cbea33334fd68bfec97ef683b68681525081608001516001815181106128a057fe5b602002602001018190525060405180604001604052807f02f218ede182ab454be585613613db00767be3acb61a0f45833e1d1dc084957d81526020017f2322edb65fb02616df2936905da83ce5fdf9c27197fc305e96f1730053f9677d815250816080015160028151811061291157fe5b602002602001018190525090565b612927613411565b61292f613471565b83600001518160006003811061294157fe5b60200201818152505083602001518160016003811061295c57fe5b602002018181525050828160026003811061297357fe5b602002018181525050600060608360808460076107d05a03fa9050806000811461299c5761299e565bfe5b50806129a957600080fd5b505092915050565b6129b9613411565b6129c1613493565b8360000151816000600481106129d357fe5b6020020181815250508360200151816001600481106129ee57fe5b602002018181525050826000015181600260048110612a0957fe5b602002018181525050826020015181600360048110612a2457fe5b602002018181525050600060608360c08460066107d05a03fa90508060008114612a4d57612a4f565bfe5b5080612a5a57600080fd5b505092915050565b612a6a613411565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015612aa7575060008360200151145b15612acb576040518060400160405280600081526020016000815250915050612af7565b60405180604001604052808460000151815260200182856020015181612aed57fe5b0683038152509150505b919050565b600060606004604051908082528060200260200182016040528015612b3b57816020015b612b28613457565b815260200190600190039081612b205790505b50905060606004604051908082528060200260200182016040528015612b7b57816020015b612b686134b5565b815260200190600190039081612b605790505b5090508a82600081518110612b8c57fe5b60200260200101819052508882600181518110612ba557fe5b60200260200101819052508682600281518110612bbe57fe5b60200260200101819052508482600381518110612bd757fe5b60200260200101819052508981600081518110612bf057fe5b60200260200101819052508781600181518110612c0957fe5b60200260200101819052508581600281518110612c2257fe5b60200260200101819052508381600381518110612c3b57fe5b6020026020010181905250612c508282613063565b9250505098975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612d1b5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b612d3660018260000154612d5790919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000612d9983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506132b6565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015612dfd5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612e8257888181518110612e2957fe5b602001015160f81c60f81b838380600101945081518110612e4657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612e14565b600090505b8751811015612ef557878181518110612e9c57fe5b602001015160f81c60f81b838380600101945081518110612eb957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612e87565b600090505b8651811015612f6857868181518110612f0f57fe5b602001015160f81c60f81b838380600101945081518110612f2c57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612efa565b600090505b8551811015612fdb57858181518110612f8257fe5b602001015160f81c60f81b838380600101945081518110612f9f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612f6d565b600090505b845181101561304e57848181518110612ff557fe5b602001015160f81c60f81b83838060010194508151811061301257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612fe0565b82995050505050505050505095945050505050565b6000815183511461307357600080fd5b60008351905060006006820290506060816040519080825280602002602001820160405280156130b25781602001602082028038833980820191505090505b50905060008090505b83811015613258578681815181106130cf57fe5b6020026020010151600001518260006006840201815181106130ed57fe5b60200260200101818152505086818151811061310557fe5b60200260200101516020015182600160068402018151811061312357fe5b60200260200101818152505085818151811061313b57fe5b60200260200101516000015160016002811061315357fe5b602002015182600260068402018151811061316a57fe5b60200260200101818152505085818151811061318257fe5b60200260200101516000015160006002811061319a57fe5b60200201518260036006840201815181106131b157fe5b6020026020010181815250508581815181106131c957fe5b6020026020010151602001516001600281106131e157fe5b60200201518260046006840201815181106131f857fe5b60200260200101818152505085818151811061321057fe5b60200260200101516020015160006002811061322857fe5b602002015182600560068402018151811061323f57fe5b60200260200101818152505080806001019150506130bb565b506132616134db565b6000602082602086026020860160086107d05a03fa9050806000811461328657613288565bfe5b508061329357600080fd5b6000826000600181106132a257fe5b602002015114159550505050505092915050565b60008383111582906132fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016132f591906143de565b60405180910390fd5b5060008385039050809150509392505050565b604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061338b57805160ff19168380011785556133b9565b828001600101855582156133b9579182015b828111156133b857825182559160200191906001019061339d565b5b5090506133c691906134fd565b5090565b6040518060a001604052806133dd613457565b81526020016133ea6134b5565b81526020016133f76134b5565b81526020016134046134b5565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156134525781836000526020600020918201910161345191906134fd565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b60405180604001604052806134c8613522565b81526020016134d5613522565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61351f91905b8082111561351b576000816000905550600101613503565b5090565b90565b6040518060400160405280600290602082028038833980820191505090505090565b6000813590506135538161483d565b92915050565b600082601f83011261356a57600080fd5b600261357d613578826145f3565b6145c6565b9150818385602084028201111561359357600080fd5b60005b838110156135c357816135a9888261384b565b845260208401935060208301925050600181019050613596565b5050505092915050565b600082601f8301126135de57600080fd5b60026135f16135ec82614615565b6145c6565b9150818385602084028201111561360757600080fd5b60005b83811015613637578161361d888261384b565b84526020840193506020830192505060018101905061360a565b5050505092915050565b60008135905061365081614854565b92915050565b60008151905061366581614854565b92915050565b60008135905061367a8161486b565b92915050565b60008135905061368f81614882565b92915050565b6000815190506136a481614882565b92915050565b600082601f8301126136bb57600080fd5b81356136ce6136c982614637565b6145c6565b915080825260208301602083018583830111156136ea57600080fd5b6136f58382846147e0565b50505092915050565b600082601f83011261370f57600080fd5b813561372261371d82614663565b6145c6565b9150808252602083016020830185838301111561373e57600080fd5b6137498382846147e0565b50505092915050565b60006040828403121561376457600080fd5b61376e60406145c6565b9050600061377e8482850161384b565b60008301525060206137928482850161384b565b60208301525092915050565b6000608082840312156137b057600080fd5b6137ba60406145c6565b905060006137ca84828501613559565b60008301525060406137de84828501613559565b60208301525092915050565b600061010082840312156137fd57600080fd5b61380760606145c6565b9050600061381784828501613752565b600083015250604061382b8482850161379e565b60208301525060c061383f84828501613752565b60408301525092915050565b60008135905061385a81614899565b92915050565b60006020828403121561387257600080fd5b600061388084828501613544565b91505092915050565b6000806040838503121561389c57600080fd5b60006138aa85828601613544565b92505060206138bb85828601613544565b9150509250929050565b6000806000606084860312156138da57600080fd5b60006138e886828701613544565b93505060206138f986828701613544565b925050604061390a8682870161384b565b9150509250925092565b6000806000806080858703121561392a57600080fd5b600061393887828801613544565b945050602061394987828801613544565b935050604061395a8782880161384b565b925050606085013567ffffffffffffffff81111561397757600080fd5b613983878288016136aa565b91505092959194509250565b600080604083850312156139a257600080fd5b60006139b085828601613544565b92505060206139c185828601613641565b9150509250929050565b600080604083850312156139de57600080fd5b60006139ec85828601613544565b92505060206139fd8582860161366b565b9150509250929050565b60008060408385031215613a1a57600080fd5b6000613a2885828601613544565b9250506020613a398582860161384b565b9150509250929050565b6000806000806101808587031215613a5a57600080fd5b6000613a6887828801613544565b9450506020613a798782880161384b565b9350506040613a8a878288016137ea565b925050610140613a9c878288016135cd565b91505092959194509250565b600060208284031215613aba57600080fd5b6000613ac884828501613656565b91505092915050565b60008060408385031215613ae457600080fd5b6000613af28582860161366b565b925050602083013567ffffffffffffffff811115613b0f57600080fd5b613b1b858286016136fe565b9150509250929050565b600080600060608486031215613b3a57600080fd5b6000613b488682870161366b565b935050602084013567ffffffffffffffff811115613b6557600080fd5b613b71868287016136fe565b925050604084013567ffffffffffffffff811115613b8e57600080fd5b613b9a868287016136aa565b9150509250925092565b600060208284031215613bb657600080fd5b6000613bc484828501613680565b91505092915050565b600060208284031215613bdf57600080fd5b6000613bed84828501613695565b91505092915050565b6000806101408385031215613c0a57600080fd5b6000613c18858286016137ea565b925050610100613c2a858286016135cd565b9150509250929050565b600060208284031215613c4657600080fd5b6000613c548482850161384b565b91505092915050565b6000613c698383614238565b60208301905092915050565b6000613c818383614256565b60208301905092915050565b613c96816147aa565b82525050565b613ca58161472c565b82525050565b613cb4816146ae565b613cbe81846146f4565b9250613cc982614699565b8060005b83811015613cfa578151613ce18782613c5d565b9650613cec836146dc565b925050600181019050613ccd565b505050505050565b613d0b816146ae565b613d1581846146ff565b9250613d2082614699565b8060005b83811015613d51578151613d388782613c75565b9650613d43836146dc565b925050600181019050613d24565b505050505050565b613d62816146a3565b613d6c81846146e9565b9250613d778261468f565b8060005b83811015613da8578151613d8f8782613c5d565b9650613d9a836146cf565b925050600181019050613d7b565b505050505050565b613db9816146a3565b613dc381846146ff565b9250613dce8261468f565b8060005b83811015613dff578151613de68782613c75565b9650613df1836146cf565b925050600181019050613dd2565b505050505050565b613e108161473e565b82525050565b613e1f8161474a565b82525050565b6000613e30826146b9565b613e3a818561470a565b9350613e4a8185602086016147ef565b613e538161482c565b840191505092915050565b6000613e69826146c4565b613e73818561471b565b9350613e838185602086016147ef565b613e8c8161482c565b840191505092915050565b6000613ea4600f8361471b565b91507f496e76616c6964206164647265737300000000000000000000000000000000006000830152602082019050919050565b6000613ee460148361471b565b91507f546f6b656e20616c7265616479206578697374730000000000000000000000006000830152602082019050919050565b6000613f2460148361471b565b91507f546f6b656e20646f6573206e6f742065786973740000000000000000000000006000830152602082019050919050565b6000613f64601f8361471b565b91507f50726f6f66206f66206f776e657273686970206973206e6f742076616c6964006000830152602082019050919050565b6000613fa460148361471b565b91507f436f6e747261637420697320756e7061757365640000000000000000000000006000830152602082019050919050565b6000613fe460318361471b565b91507f4f776e6572736869702063616e6e6f74207472616e73666572656420746f206160008301527f20636f6e747261637420616464726573730000000000000000000000000000006020830152604082019050919050565b600061404a60008361471b565b9150600082019050919050565b6000614064601a8361471b565b91507f436f6e7472616374204f776e65722069732072657175697265640000000000006000830152602082019050919050565b60006140a460158361471b565b91507f43616c6c6572206e6f7420617574686f726973656400000000000000000000006000830152602082019050919050565b60006140e460128361471b565b91507f436f6e74726163742069732070617573656400000000000000000000000000006000830152602082019050919050565b6000614124601c8361471b565b91507f476976656e204164647265737320697320746f6b656e204f776e6572000000006000830152602082019050919050565b600061416460168361471b565b91507f536f6c7574696f6e206973206e6f7420756e69717565000000000000000000006000830152602082019050919050565b6040820160008201516141ad6000850182614238565b5060208201516141c06020850182614238565b50505050565b6080820160008201516141dc6000850182613d59565b5060208201516141ef6040850182613d59565b50505050565b6101008201600082015161420c6000850182614197565b50602082015161421f60408501826141c6565b50604082015161423260c0850182614197565b50505050565b614241816147a0565b82525050565b614250816147a0565b82525050565b61425f816147a0565b82525050565b614276614271826147a0565b614822565b82525050565b6000614288828a614265565b6020820191506142988289614265565b6020820191506142a88288613db0565b6040820191506142b88287613db0565b6040820191506142c88286614265565b6020820191506142d88285614265565b6020820191506142e88284613d02565b60408201915081905098975050505050505050565b60006020820190506143126000830184613c9c565b92915050565b600060208201905061432d6000830184613c8d565b92915050565b60006080820190506143486000830187613c8d565b6143556020830186613c9c565b6143626040830185614247565b81810360608301526143748184613e25565b905095945050505050565b60006040820190506143946000830185613c9c565b6143a16020830184614247565b9392505050565b60006020820190506143bd6000830184613e07565b92915050565b60006020820190506143d86000830184613e16565b92915050565b600060208201905081810360008301526143f88184613e5e565b905092915050565b6000602082019050818103600083015261441981613e97565b9050919050565b6000602082019050818103600083015261443981613ed7565b9050919050565b6000602082019050818103600083015261445981613f17565b9050919050565b6000602082019050818103600083015261447981613f57565b9050919050565b6000602082019050818103600083015261449981613f97565b9050919050565b600060208201905081810360008301526144b981613fd7565b9050919050565b600060208201905081810360008301526144d98161403d565b9050919050565b600060208201905081810360008301526144f981614057565b9050919050565b6000602082019050818103600083015261451981614097565b9050919050565b60006020820190508181036000830152614539816140d7565b9050919050565b6000602082019050818103600083015261455981614117565b9050919050565b6000602082019050818103600083015261457981614157565b9050919050565b60006101408201905061459660008301856141f5565b6145a4610100830184613cab565b9392505050565b60006020820190506145c06000830184614247565b92915050565b6000604051905081810181811067ffffffffffffffff821117156145e957600080fd5b8060405250919050565b600067ffffffffffffffff82111561460a57600080fd5b602082029050919050565b600067ffffffffffffffff82111561462c57600080fd5b602082029050919050565b600067ffffffffffffffff82111561464e57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561467a57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061473782614780565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006147b5826147bc565b9050919050565b60006147c7826147ce565b9050919050565b60006147d982614780565b9050919050565b82818337600083830152505050565b60005b8381101561480d5780820151818401526020810190506147f2565b8381111561481c576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b6148468161472c565b811461485157600080fd5b50565b61485d8161473e565b811461486857600080fd5b50565b6148748161474a565b811461487f57600080fd5b50565b61488b81614754565b811461489657600080fd5b50565b6148a2816147a0565b81146148ad57600080fd5b5056fea365627a7a7231582053b024cf8a6a142c0a87f7471cca8680c4858791c4e896fc4fb8be81bfa338386c6578706572696d656e74616cf564736f6c6343000510004068747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c806343cd76fc116100f9578063a22cb46511610097578063bdc32be011610071578063bdc32be014610501578063c87b56dd1461051f578063e985e9c51461054f578063f2fde38b1461057f576101c4565b8063a22cb465146104ad578063a6ffc852146104c9578063b88d4fde146104e5576101c4565b806370a08231116100d357806370a08231146104375780638456cb5914610467578063893d20e81461047157806395d89b411461048f576101c4565b806343cd76fc146103a75780634f6ccce7146103d75780636352211e14610407576101c4565b806324171ab61161016657806338bbfa501161014057806338bbfa50146103355780633f4ba83a1461035157806340c10f191461035b57806342842e0e1461038b576101c4565b806324171ab6146102b957806327dc297e146102e95780632f745c5914610305576101c4565b8063095ea7b3116101a2578063095ea7b314610247578063106e426e1461026357806318160ddd1461027f57806323b872dd1461029d576101c4565b806301ffc9a7146101c957806306fdde03146101f9578063081812fc14610217575b600080fd5b6101e360048036036101de9190810190613ba4565b61059b565b6040516101f091906143a8565b60405180910390f35b610201610603565b60405161020e91906143de565b60405180910390f35b610231600480360361022c9190810190613c34565b6106a5565b60405161023e91906142fd565b60405180910390f35b610261600480360361025c9190810190613a07565b6106e2565b005b61027d600480360361027891908101906139cb565b610896565b005b610287610a47565b60405161029491906145ab565b60405180910390f35b6102b760048036036102b291908101906138c5565b610a54565b005b6102d360048036036102ce9190810190613bf6565b610a77565b6040516102e091906143c3565b60405180910390f35b61030360048036036102fe9190810190613ad1565b610ae4565b005b61031f600480360361031a9190810190613a07565b610b27565b60405161032c91906145ab565b60405180910390f35b61034f600480360361034a9190810190613b25565b610b9a565b005b610359610b9f565b005b61037560048036036103709190810190613a07565b610cd0565b60405161038291906143a8565b60405180910390f35b6103a560048036036103a091908101906138c5565b610d7e565b005b6103c160048036036103bc9190810190613bf6565b610d9e565b6040516103ce91906143a8565b60405180910390f35b6103f160048036036103ec9190810190613c34565b610e43565b6040516103fe91906145ab565b60405180910390f35b610421600480360361041c9190810190613c34565b610e77565b60405161042e91906142fd565b60405180910390f35b610451600480360361044c9190810190613860565b610eb4565b60405161045e91906145ab565b60405180910390f35b61046f610f04565b005b610479611037565b60405161048691906142fd565b60405180910390f35b610497611060565b6040516104a491906143de565b60405180910390f35b6104c760048036036104c2919081019061398f565b611102565b005b6104e360048036036104de9190810190613a43565b611238565b005b6104ff60048036036104fa9190810190613914565b611422565b005b610509611448565b60405161051691906143de565b60405180910390f35b61053960048036036105349190810190613c34565b6114ea565b60405161054691906143de565b60405180910390f35b61056960048036036105649190810190613889565b6115b1565b60405161057691906143a8565b60405180910390f35b61059960048036036105949190810190613860565b611645565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561069b5780601f106106705761010080835404028352916020019161069b565b820191906000526020600020905b81548152906001019060200180831161067e57829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006106ed82610e77565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075590614540565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1661077d611037565b73ffffffffffffffffffffffffffffffffffffffff1614806107a557506107a481336115b1565b5b6107e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107db90614500565b60405180910390fd5b336003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600060148054905090506108a8613311565b60405180606001604052808381526020018573ffffffffffffffffffffffffffffffffffffffff168152602001600015158152509050601481908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690831515021790555050505080601560008581526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055509050507f3a01cc868bdb36c1d9b8a262a8ad25064b23ac175b3f8e4453f1daf8ff6bac0d8483604051610a3992919061437f565b60405180910390a150505050565b6000600880549050905090565b610a5e33826117b8565b610a6757600080fd5b610a7283838361184d565b505050565b600082600001516000015183600001516020015184602001516000015185602001516020015186604001516000015187604001516020015187604051602001610ac6979695949392919061427c565b60405160208183030381529060405280519060200120905092915050565b610b23828260006040519080825280601f01601f191660200182016040528015610b1d5781602001600182028038833980820191505090505b50610b9a565b5050565b6000610b3283610eb4565b8210610b3d57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610b8757fe5b9060005260206000200154905092915050565b505050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c25906144e0565b60405180910390fd5b600060149054906101000a900460ff16610c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7490614480565b60405180910390fd5b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051610cc69190614318565b60405180910390a1565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d58906144e0565b60405180910390fd5b610d6b8383611871565b610d7482611892565b6001905092915050565b610d9983838360405180602001604052806000815250611422565b505050565b600060606002604051908082528060200260200182016040528015610dd25781602001602082028038833980820191505090505b50905060008090505b6002811015610e1a57838160028110610df057fe5b6020020151828281518110610e0157fe5b6020026020010181815250508080600101915050610ddb565b506000610e2782866119b0565b1415610e37576001915050610e3d565b60009150505b92915050565b6000610e4d610a47565b8210610e5857600080fd5b60088281548110610e6557fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610efd600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b22565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8a906144e0565b60405180910390fd5b600060149054906101000a900460ff1615610fe3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fda90614520565b60405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583360405161102d9190614318565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110f85780601f106110cd576101008083540402835291602001916110f8565b820191906000526020600020905b8154815290600101906020018083116110db57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561113b57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161122c91906143a8565b60405180910390a35050565b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc83836040518363ffffffff1660e01b8152600401611295929190614580565b60206040518083038186803b1580156112ad57600080fd5b505afa1580156112c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112e59190810190613aa8565b611324576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131b90614460565b60405180910390fd5b60006113308383610a77565b9050600073ffffffffffffffffffffffffffffffffffffffff166015600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146113d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ce90614560565b60405180910390fd5b6113e18582610896565b6113eb8585610cd0565b5060016015600083815260200190815260200160002060010160146101000a81548160ff0219169083151502179055505050505050565b61142d848484610a54565b61143984848484611b30565b61144257600080fd5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114e05780601f106114b5576101008083540402835291602001916114e0565b820191906000526020600020905b8154815290600101906020018083116114c357829003601f168201915b5050505050905090565b60606114f582611c47565b6114fe57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115a55780601f1061157a576101008083540402835291602001916115a5565b820191906000526020600020905b81548152906001019060200180831161158857829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146116d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116cb906144e0565b60405180910390fd5b6116dd81611cb9565b1561171d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611714906144a0565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb5dd3568787d73bfc318dde9151384113c6040cc0e486322c1eabfe6133d17146000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516117ad91906142fd565b60405180910390a150565b6000806117c483610e77565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061183357508373ffffffffffffffffffffffffffffffffffffffff1661181b846106a5565b73ffffffffffffffffffffffffffffffffffffffff16145b80611844575061184381856115b1565b5b91505092915050565b611858838383611d04565b6118628382611efd565b61186c828261209b565b505050565b61187b8282612162565b611885828261209b565b61188e81612314565b5050565b61189b81611c47565b6118da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118d190614440565b60405180910390fd5b61198660118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119735780601f1061194857610100808354040283529160200191611973565b820191906000526020600020905b81548152906001019060200180831161195657829003601f168201915b505050505061198183612360565b61248d565b6012600083815260200190815260200160002090805190602001906119ac92919061334a565b5050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506119de6133ca565b6119e66124d1565b90508060800151516001865101146119fd57600080fd5b611a05613411565b6040518060400160405280600081526020016000815250905060008090505b8651811015611a9b5783878281518110611a3a57fe5b602002602001015110611a4c57600080fd5b611a8c82611a8785608001516001850181518110611a6657fe5b60200260200101518a8581518110611a7a57fe5b602002602001015161291f565b6129b1565b91508080600101915050611a24565b50611abe818360800151600081518110611ab157fe5b60200260200101516129b1565b9050611b0485600001518660200151611ad684612a62565b8560400151611ae88a60400151612a62565b8760600151611afa8960000151612a62565b8960200151612afc565b611b145760019350505050611b1c565b600093505050505b92915050565b600081600001549050919050565b6000611b518473ffffffffffffffffffffffffffffffffffffffff16611cb9565b611b5e5760019050611c3f565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401611b9f9493929190614333565b602060405180830381600087803b158015611bb957600080fd5b505af1158015611bcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611bf19190810190613bcd565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015611cfb57506000801b8214155b92505050919050565b611d0d81610e77565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611d7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d71906144c0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611db457600080fd5b611dbd81612c60565b611e04600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612d1e565b611e4b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612d41565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611f556001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612d5790919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114612042576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611fc257fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061201a57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612094919061342b565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b61216b81611c47565b156121ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121a290614420565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561221b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161221290614400565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122b4600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612d41565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b606060008214156123a8576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612488565b600082905060005b600082146123d2578080600101915050600a82816123ca57fe5b0491506123b0565b6060816040519080825280601f01601f1916602001820160405280156124075781602001600182028038833980820191505090505b50905060006001830390505b6000861461248057600a868161242557fe5b0660300160f81b8282806001900393508151811061243f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161247857fe5b049550612413565b819450505050505b919050565b60606124c98383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612da1565b905092915050565b6124d96133ca565b60405180604001604052807f2543396cef98e72093c2b827fdcfff48ae61e674074881f2e2482947f99cad2881526020017f24d1379ad925b85e433aba922c14a6880b94fd99d965a6c8f02c28d6f320e67a8152508160000181905250604051806040016040528060405180604001604052807f0221de37216644acbc4313612980025d0386c47b8f3b278bdb25073063c29e0d81526020017f29036e2b41fe563f0f5abe1eaf2a1c0255f0fab3bef09cbc5de9d52b08e765b7815250815260200160405180604001604052807f038a4a6bcaaa06421fd170f44846468960ee2506722fd71541ece76b4edafced81526020017f0286a71c1a3489a7818328a0ec46b511088f2e331265c4abb550b4cf9bcc08918152508152508160200181905250604051806040016040528060405180604001604052807f1c8a81d8da11612501888bf89a724a00fc2306fcbee35c8c6e91109e1822274d81526020017f02303eb1c35025794418836c5c271571f2b9fc8bb36950fe6e32b251f32df87b815250815260200160405180604001604052807f2cf4a173e864b09e8b931badcb7fabca572a2db136e01be91bdd1bdd3b0993fd81526020017f1b632f420c712c1cb0c72d0f6779beba00ffc6ca78d7c2b4037f8b5b9055d5e18152508152508160400181905250604051806040016040528060405180604001604052807f2787c00d7beb4e91dd46363378c30d6313f6ec175ebff7c3cf86d590806617af81526020017f057cf7ff765744feb397fc26c3101fb0c964ea06eeb10ada46c534eef95721eb815250815260200160405180604001604052807f0f86f541f118292e7e5ac86690d414c9751ac90518470b4486dde746da631c7f81526020017f152dcbc453dd2705d4b8f883e7be5db54f516e686f7cf7816064aaab52304e1d815250815250816060018190525060036040519080825280602002602001820160405280156127c057816020015b6127ad613457565b8152602001906001900390816127a55790505b50816080018190525060405180604001604052807f2a7ed2fdc30e244a7df91674450bba493a7d2c2a9f6ba4d5fcea3a58abfdae3781526020017f15e3535eb4f1f76976a1d42d04ce22e6e6e72bef02907ce2e1b115749484d738815250816080015160008151811061282f57fe5b602002602001018190525060405180604001604052807f0e037f87f233cc3f338c9efb6807f82f0c6cf61dd9c6a80fa4ff5f2785dbb54a81526020017f030a3434c5878ecf4b3ac503e29de5cb5108cbea33334fd68bfec97ef683b68681525081608001516001815181106128a057fe5b602002602001018190525060405180604001604052807f02f218ede182ab454be585613613db00767be3acb61a0f45833e1d1dc084957d81526020017f2322edb65fb02616df2936905da83ce5fdf9c27197fc305e96f1730053f9677d815250816080015160028151811061291157fe5b602002602001018190525090565b612927613411565b61292f613471565b83600001518160006003811061294157fe5b60200201818152505083602001518160016003811061295c57fe5b602002018181525050828160026003811061297357fe5b602002018181525050600060608360808460076107d05a03fa9050806000811461299c5761299e565bfe5b50806129a957600080fd5b505092915050565b6129b9613411565b6129c1613493565b8360000151816000600481106129d357fe5b6020020181815250508360200151816001600481106129ee57fe5b602002018181525050826000015181600260048110612a0957fe5b602002018181525050826020015181600360048110612a2457fe5b602002018181525050600060608360c08460066107d05a03fa90508060008114612a4d57612a4f565bfe5b5080612a5a57600080fd5b505092915050565b612a6a613411565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015612aa7575060008360200151145b15612acb576040518060400160405280600081526020016000815250915050612af7565b60405180604001604052808460000151815260200182856020015181612aed57fe5b0683038152509150505b919050565b600060606004604051908082528060200260200182016040528015612b3b57816020015b612b28613457565b815260200190600190039081612b205790505b50905060606004604051908082528060200260200182016040528015612b7b57816020015b612b686134b5565b815260200190600190039081612b605790505b5090508a82600081518110612b8c57fe5b60200260200101819052508882600181518110612ba557fe5b60200260200101819052508682600281518110612bbe57fe5b60200260200101819052508482600381518110612bd757fe5b60200260200101819052508981600081518110612bf057fe5b60200260200101819052508781600181518110612c0957fe5b60200260200101819052508581600281518110612c2257fe5b60200260200101819052508381600381518110612c3b57fe5b6020026020010181905250612c508282613063565b9250505098975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612d1b5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b612d3660018260000154612d5790919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000612d9983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506132b6565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015612dfd5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612e8257888181518110612e2957fe5b602001015160f81c60f81b838380600101945081518110612e4657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612e14565b600090505b8751811015612ef557878181518110612e9c57fe5b602001015160f81c60f81b838380600101945081518110612eb957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612e87565b600090505b8651811015612f6857868181518110612f0f57fe5b602001015160f81c60f81b838380600101945081518110612f2c57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612efa565b600090505b8551811015612fdb57858181518110612f8257fe5b602001015160f81c60f81b838380600101945081518110612f9f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612f6d565b600090505b845181101561304e57848181518110612ff557fe5b602001015160f81c60f81b83838060010194508151811061301257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612fe0565b82995050505050505050505095945050505050565b6000815183511461307357600080fd5b60008351905060006006820290506060816040519080825280602002602001820160405280156130b25781602001602082028038833980820191505090505b50905060008090505b83811015613258578681815181106130cf57fe5b6020026020010151600001518260006006840201815181106130ed57fe5b60200260200101818152505086818151811061310557fe5b60200260200101516020015182600160068402018151811061312357fe5b60200260200101818152505085818151811061313b57fe5b60200260200101516000015160016002811061315357fe5b602002015182600260068402018151811061316a57fe5b60200260200101818152505085818151811061318257fe5b60200260200101516000015160006002811061319a57fe5b60200201518260036006840201815181106131b157fe5b6020026020010181815250508581815181106131c957fe5b6020026020010151602001516001600281106131e157fe5b60200201518260046006840201815181106131f857fe5b60200260200101818152505085818151811061321057fe5b60200260200101516020015160006002811061322857fe5b602002015182600560068402018151811061323f57fe5b60200260200101818152505080806001019150506130bb565b506132616134db565b6000602082602086026020860160086107d05a03fa9050806000811461328657613288565bfe5b508061329357600080fd5b6000826000600181106132a257fe5b602002015114159550505050505092915050565b60008383111582906132fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016132f591906143de565b60405180910390fd5b5060008385039050809150509392505050565b604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061338b57805160ff19168380011785556133b9565b828001600101855582156133b9579182015b828111156133b857825182559160200191906001019061339d565b5b5090506133c691906134fd565b5090565b6040518060a001604052806133dd613457565b81526020016133ea6134b5565b81526020016133f76134b5565b81526020016134046134b5565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156134525781836000526020600020918201910161345191906134fd565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b60405180604001604052806134c8613522565b81526020016134d5613522565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61351f91905b8082111561351b576000816000905550600101613503565b5090565b90565b6040518060400160405280600290602082028038833980820191505090505090565b6000813590506135538161483d565b92915050565b600082601f83011261356a57600080fd5b600261357d613578826145f3565b6145c6565b9150818385602084028201111561359357600080fd5b60005b838110156135c357816135a9888261384b565b845260208401935060208301925050600181019050613596565b5050505092915050565b600082601f8301126135de57600080fd5b60026135f16135ec82614615565b6145c6565b9150818385602084028201111561360757600080fd5b60005b83811015613637578161361d888261384b565b84526020840193506020830192505060018101905061360a565b5050505092915050565b60008135905061365081614854565b92915050565b60008151905061366581614854565b92915050565b60008135905061367a8161486b565b92915050565b60008135905061368f81614882565b92915050565b6000815190506136a481614882565b92915050565b600082601f8301126136bb57600080fd5b81356136ce6136c982614637565b6145c6565b915080825260208301602083018583830111156136ea57600080fd5b6136f58382846147e0565b50505092915050565b600082601f83011261370f57600080fd5b813561372261371d82614663565b6145c6565b9150808252602083016020830185838301111561373e57600080fd5b6137498382846147e0565b50505092915050565b60006040828403121561376457600080fd5b61376e60406145c6565b9050600061377e8482850161384b565b60008301525060206137928482850161384b565b60208301525092915050565b6000608082840312156137b057600080fd5b6137ba60406145c6565b905060006137ca84828501613559565b60008301525060406137de84828501613559565b60208301525092915050565b600061010082840312156137fd57600080fd5b61380760606145c6565b9050600061381784828501613752565b600083015250604061382b8482850161379e565b60208301525060c061383f84828501613752565b60408301525092915050565b60008135905061385a81614899565b92915050565b60006020828403121561387257600080fd5b600061388084828501613544565b91505092915050565b6000806040838503121561389c57600080fd5b60006138aa85828601613544565b92505060206138bb85828601613544565b9150509250929050565b6000806000606084860312156138da57600080fd5b60006138e886828701613544565b93505060206138f986828701613544565b925050604061390a8682870161384b565b9150509250925092565b6000806000806080858703121561392a57600080fd5b600061393887828801613544565b945050602061394987828801613544565b935050604061395a8782880161384b565b925050606085013567ffffffffffffffff81111561397757600080fd5b613983878288016136aa565b91505092959194509250565b600080604083850312156139a257600080fd5b60006139b085828601613544565b92505060206139c185828601613641565b9150509250929050565b600080604083850312156139de57600080fd5b60006139ec85828601613544565b92505060206139fd8582860161366b565b9150509250929050565b60008060408385031215613a1a57600080fd5b6000613a2885828601613544565b9250506020613a398582860161384b565b9150509250929050565b6000806000806101808587031215613a5a57600080fd5b6000613a6887828801613544565b9450506020613a798782880161384b565b9350506040613a8a878288016137ea565b925050610140613a9c878288016135cd565b91505092959194509250565b600060208284031215613aba57600080fd5b6000613ac884828501613656565b91505092915050565b60008060408385031215613ae457600080fd5b6000613af28582860161366b565b925050602083013567ffffffffffffffff811115613b0f57600080fd5b613b1b858286016136fe565b9150509250929050565b600080600060608486031215613b3a57600080fd5b6000613b488682870161366b565b935050602084013567ffffffffffffffff811115613b6557600080fd5b613b71868287016136fe565b925050604084013567ffffffffffffffff811115613b8e57600080fd5b613b9a868287016136aa565b9150509250925092565b600060208284031215613bb657600080fd5b6000613bc484828501613680565b91505092915050565b600060208284031215613bdf57600080fd5b6000613bed84828501613695565b91505092915050565b6000806101408385031215613c0a57600080fd5b6000613c18858286016137ea565b925050610100613c2a858286016135cd565b9150509250929050565b600060208284031215613c4657600080fd5b6000613c548482850161384b565b91505092915050565b6000613c698383614238565b60208301905092915050565b6000613c818383614256565b60208301905092915050565b613c96816147aa565b82525050565b613ca58161472c565b82525050565b613cb4816146ae565b613cbe81846146f4565b9250613cc982614699565b8060005b83811015613cfa578151613ce18782613c5d565b9650613cec836146dc565b925050600181019050613ccd565b505050505050565b613d0b816146ae565b613d1581846146ff565b9250613d2082614699565b8060005b83811015613d51578151613d388782613c75565b9650613d43836146dc565b925050600181019050613d24565b505050505050565b613d62816146a3565b613d6c81846146e9565b9250613d778261468f565b8060005b83811015613da8578151613d8f8782613c5d565b9650613d9a836146cf565b925050600181019050613d7b565b505050505050565b613db9816146a3565b613dc381846146ff565b9250613dce8261468f565b8060005b83811015613dff578151613de68782613c75565b9650613df1836146cf565b925050600181019050613dd2565b505050505050565b613e108161473e565b82525050565b613e1f8161474a565b82525050565b6000613e30826146b9565b613e3a818561470a565b9350613e4a8185602086016147ef565b613e538161482c565b840191505092915050565b6000613e69826146c4565b613e73818561471b565b9350613e838185602086016147ef565b613e8c8161482c565b840191505092915050565b6000613ea4600f8361471b565b91507f496e76616c6964206164647265737300000000000000000000000000000000006000830152602082019050919050565b6000613ee460148361471b565b91507f546f6b656e20616c7265616479206578697374730000000000000000000000006000830152602082019050919050565b6000613f2460148361471b565b91507f546f6b656e20646f6573206e6f742065786973740000000000000000000000006000830152602082019050919050565b6000613f64601f8361471b565b91507f50726f6f66206f66206f776e657273686970206973206e6f742076616c6964006000830152602082019050919050565b6000613fa460148361471b565b91507f436f6e747261637420697320756e7061757365640000000000000000000000006000830152602082019050919050565b6000613fe460318361471b565b91507f4f776e6572736869702063616e6e6f74207472616e73666572656420746f206160008301527f20636f6e747261637420616464726573730000000000000000000000000000006020830152604082019050919050565b600061404a60008361471b565b9150600082019050919050565b6000614064601a8361471b565b91507f436f6e7472616374204f776e65722069732072657175697265640000000000006000830152602082019050919050565b60006140a460158361471b565b91507f43616c6c6572206e6f7420617574686f726973656400000000000000000000006000830152602082019050919050565b60006140e460128361471b565b91507f436f6e74726163742069732070617573656400000000000000000000000000006000830152602082019050919050565b6000614124601c8361471b565b91507f476976656e204164647265737320697320746f6b656e204f776e6572000000006000830152602082019050919050565b600061416460168361471b565b91507f536f6c7574696f6e206973206e6f7420756e69717565000000000000000000006000830152602082019050919050565b6040820160008201516141ad6000850182614238565b5060208201516141c06020850182614238565b50505050565b6080820160008201516141dc6000850182613d59565b5060208201516141ef6040850182613d59565b50505050565b6101008201600082015161420c6000850182614197565b50602082015161421f60408501826141c6565b50604082015161423260c0850182614197565b50505050565b614241816147a0565b82525050565b614250816147a0565b82525050565b61425f816147a0565b82525050565b614276614271826147a0565b614822565b82525050565b6000614288828a614265565b6020820191506142988289614265565b6020820191506142a88288613db0565b6040820191506142b88287613db0565b6040820191506142c88286614265565b6020820191506142d88285614265565b6020820191506142e88284613d02565b60408201915081905098975050505050505050565b60006020820190506143126000830184613c9c565b92915050565b600060208201905061432d6000830184613c8d565b92915050565b60006080820190506143486000830187613c8d565b6143556020830186613c9c565b6143626040830185614247565b81810360608301526143748184613e25565b905095945050505050565b60006040820190506143946000830185613c9c565b6143a16020830184614247565b9392505050565b60006020820190506143bd6000830184613e07565b92915050565b60006020820190506143d86000830184613e16565b92915050565b600060208201905081810360008301526143f88184613e5e565b905092915050565b6000602082019050818103600083015261441981613e97565b9050919050565b6000602082019050818103600083015261443981613ed7565b9050919050565b6000602082019050818103600083015261445981613f17565b9050919050565b6000602082019050818103600083015261447981613f57565b9050919050565b6000602082019050818103600083015261449981613f97565b9050919050565b600060208201905081810360008301526144b981613fd7565b9050919050565b600060208201905081810360008301526144d98161403d565b9050919050565b600060208201905081810360008301526144f981614057565b9050919050565b6000602082019050818103600083015261451981614097565b9050919050565b60006020820190508181036000830152614539816140d7565b9050919050565b6000602082019050818103600083015261455981614117565b9050919050565b6000602082019050818103600083015261457981614157565b9050919050565b60006101408201905061459660008301856141f5565b6145a4610100830184613cab565b9392505050565b60006020820190506145c06000830184614247565b92915050565b6000604051905081810181811067ffffffffffffffff821117156145e957600080fd5b8060405250919050565b600067ffffffffffffffff82111561460a57600080fd5b602082029050919050565b600067ffffffffffffffff82111561462c57600080fd5b602082029050919050565b600067ffffffffffffffff82111561464e57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561467a57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061473782614780565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006147b5826147bc565b9050919050565b60006147c7826147ce565b9050919050565b60006147d982614780565b9050919050565b82818337600083830152505050565b60005b8381101561480d5780820151818401526020810190506147f2565b8381111561481c576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b6148468161472c565b811461485157600080fd5b50565b61485d8161473e565b811461486857600080fd5b50565b6148748161474a565b811461487f57600080fd5b50565b61488b81614754565b811461489657600080fd5b50565b6148a2816147a0565b81146148ad57600080fd5b5056fea365627a7a7231582053b024cf8a6a142c0a87f7471cca8680c4858791c4e896fc4fb8be81bfa338386c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "340:2279:6:-;;;22596:96:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;954:199:6;8:9:-1;5:2;;;30:1;27;20:12;5:2;954:199:6;;;;;;;;;;;;;;;;;;;;;;;;1064:4;1070:6;22769:4:4;22775:6;22783:13;20389:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1011:10;1002:6;;:19;;;;;;;;;;;;;;;;;;2388:5;2378:7;;:15;;;;;;;;;;;;;;;;;;3301:40;2898:10;3320:20;;3301:18;;;:40;;:::i;:::-;5447;5321:10;5466:20;;5447:18;;;:40;;:::i;:::-;13032:51;12638:10;13051:31;;13032:18;;;:51;;:::i;:::-;20497:4;20489:5;:12;;;;;;;;;;;;:::i;:::-;;20521:6;20511:7;:16;;;;;;;;;;;;:::i;:::-;;20553:12;20537:13;:28;;;;;;;;;;;;:::i;:::-;;20576:49;20152:10;20595:29;;20576:18;;;:49;;:::i;:::-;20389:243;;;22700:107;;1130:15:6;1107:10;;:39;;;;;;;;;;;;;;;;;;954:199;;;340:2279;;3651:158:4;3741:10;3726:25;;:11;:25;;;;;3718:34;;;;;;3798:4;3762:20;:33;3783:11;3762:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3651:158;:::o;340:2279:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:733;;;;768:2;756:9;747:7;743:23;739:32;736:2;;;784:1;781;774:12;736:2;819:1;836:64;892:7;883:6;872:9;868:22;836:64;;;826:74;;798:108;958:2;947:9;943:18;937:25;982:18;974:6;971:30;968:2;;;1014:1;1011;1004:12;968:2;1034:74;1100:7;1091:6;1080:9;1076:22;1034:74;;;1024:84;;916:198;1166:2;1155:9;1151:18;1145:25;1190:18;1182:6;1179:30;1176:2;;;1222:1;1219;1212:12;1176:2;1242:74;1308:7;1299:6;1288:9;1284:22;1242:74;;;1232:84;;1124:198;730:602;;;;;;1339:256;;1401:2;1395:9;1385:19;;1439:4;1431:6;1427:17;1538:6;1526:10;1523:22;1502:18;1490:10;1487:34;1484:62;1481:2;;;1559:1;1556;1549:12;1481:2;1579:10;1575:2;1568:22;1379:216;;;;;1602:322;;1746:18;1738:6;1735:30;1732:2;;;1778:1;1775;1768:12;1732:2;1845:4;1841:9;1834:4;1826:6;1822:17;1818:33;1810:41;;1909:4;1903;1899:15;1891:23;;1669:255;;;;1931:91;;1993:24;2011:5;1993:24;;;1982:35;;1976:46;;;;2029:121;;2102:42;2095:5;2091:54;2080:65;;2074:76;;;;2158:268;2223:1;2230:101;2244:6;2241:1;2238:13;2230:101;;;2320:1;2315:3;2311:11;2305:18;2301:1;2296:3;2292:11;2285:39;2266:2;2263:1;2259:10;2254:15;;2230:101;;;2346:6;2343:1;2340:13;2337:2;;;2411:1;2402:6;2397:3;2393:16;2386:27;2337:2;2207:219;;;;;2434:117;2503:24;2521:5;2503:24;;;2496:5;2493:35;2483:2;;2542:1;2539;2532:12;2483:2;2477:74;;340:2279:6;;;;;;;",
  "deployedSourceMap": "340:2279:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;340:2279:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3439:133:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;20731:83;;;:::i;:::-;;;;;;;;;;;;;;;;6737:168;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6336:395;;;;;;;;;;;;;;;;:::i;:::-;;1245:309:6;;;;;;;;;;;;;;;;:::i;:::-;;13797:94:4;;;:::i;:::-;;;;;;;;;;;;;;;;7882:180;;;;;;;;;;;;;;;;:::i;:::-;;2285:329:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14801:122:5;;;;;;;;;;;;;;;;:::i;:::-;;13463:182:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:5;;;;;;;;;;;;;;;;:::i;:::-;;2712:112:4;;;:::i;:::-;;22813:162;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8068:132;;;;;;;;;;;;;;;;:::i;:::-;;9498:400:7;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14228:148:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5804:175;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5500:298;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2596:110;;;:::i;:::-;;1552:80;;;:::i;:::-;;;;;;;;;;;;;;;;20820:87;;;:::i;:::-;;;;;;;;;;;;;;;;7197:213;;;;;;;;;;;;;;;;:::i;:::-;;1783:496:6;;;;;;;;;;;;;;;;:::i;:::-;;8206:211:4;;;;;;;;;;;;;;;;:::i;:::-;;20913:102;;;:::i;:::-;;;;;;;;;;;;;;;;21021:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7731:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1148:398;;;;;;;;;;;;;;;;:::i;:::-;;3439:133;3509:4;3532:20;:33;3553:11;3532:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3525:40;;3439:133;;;:::o;20731:83::-;20770:13;20802:5;20795:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20731:83;:::o;6737:168::-;6796:7;6873:15;:24;6889:7;6873:24;;;;;;;;;;;;;;;;;;;;;6866:31;;6737:168;;;:::o;6336:395::-;6399:18;6420:16;6428:7;6420;:16::i;:::-;6399:37;;6471:2;6457:16;;:10;:16;;;;6448:58;;;;;;;;;;;;;;;;;;;;;;6539:10;6525:24;;:10;:8;:10::i;:::-;:24;;;:68;;;;6553:40;6570:10;6582;6553:16;:40::i;:::-;6525:68;6516:103;;;;;;;;;;;;;;;;;;;;;;6657:10;6630:15;:24;6646:7;6630:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6716:7;6712:2;6691:33;;6700:10;6691:33;;;;;;;;;;;;6336:395;;;:::o;1245:309:6:-;1315:16;1334:9;:16;;;;1315:35;;1361:22;;:::i;:::-;1386:32;;;;;;;;1395:8;1386:32;;;;1405:5;1386:32;;;;;;1412:5;1386:32;;;;;1361:57;;1428:9;1443:6;1428:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1428:22:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1487:6;1460:15;:24;1476:7;1460:24;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1517:30;1531:5;1538:8;1517:30;;;;;;;;;;;;;;;;1245:309;;;;:::o;13797:94:4:-;13841:7;13867:10;:17;;;;13860:24;;13797:94;:::o;7882:180::-;7972:39;7991:10;8003:7;7972:18;:39::i;:::-;7964:48;;;;;;8023:32;8037:4;8043:2;8047:7;8023:13;:32::i;:::-;7882:180;;;:::o;2285:329:6:-;2373:15;2450:5;:7;;;:9;;;2473:5;:7;;;:9;;;2497:5;:7;;;:9;;;2521:5;:7;;;:9;;;2545:5;:7;;;:9;;;2568:5;:7;;;:9;;;2591:5;2420:186;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2420:186:6;;;2410:197;;;;;;2400:207;;2285:329;;;;:::o;14801:122:5:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:5;;;;14876:10;:40::i;:::-;14801:122;;:::o;13463:182:4:-;13543:7;13578:16;13588:5;13578:9;:16::i;:::-;13570:5;:24;13562:33;;;;;;13612:12;:19;13625:5;13612:19;;;;;;;;;;;;;;;13632:5;13612:26;;;;;;;;;;;;;;;;13605:33;;13463:182;;;;:::o;14929:166:5:-;;;;:::o;2712:112:4:-;1083:10;1073:20;;:6;;;;;;;;;;;:20;;;1065:59;;;;;;;;;;;;;;;;;;;;;;2540:7;;;;;;;;;;;2532:40;;;;;;;;;;;;;;;;;;;;;;2777:5;2767:7;;:15;;;;;;;;;;;;;;;;;;2797:20;2806:10;2797:20;;;;;;;;;;;;;;;2712:112::o;22813:162::-;22882:4;1083:10;1073:20;;:6;;;;;;;;;;;:20;;;1065:59;;;;;;;;;;;;;;;;;;;;;;22898:18;22904:2;22908:7;22898:5;:18::i;:::-;22926:20;22938:7;22926:11;:20::i;:::-;22964:4;22957:11;;22813:162;;;;:::o;8068:132::-;8154:39;8171:4;8177:2;8181:7;8154:39;;;;;;;;;;;;:16;:39::i;:::-;8068:132;;;:::o;9498:400:7:-;9601:6;9619:25;9658:1;9647:13;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;9647:13:7;;;;9619:41;;9683:6;9692:1;9683:10;;9679:88;9699:12;9695:1;:16;9679:88;;;9748:5;9754:1;9748:8;;;;;;;;;;;9731:11;9743:1;9731:14;;;;;;;;;;;;;:25;;;;;9713:3;;;;;;;9679:88;;;;9810:1;9780:26;9787:11;9800:5;9780:6;:26::i;:::-;:31;9776:116;;;9834:4;9827:11;;;;;9776:116;9876:5;9869:12;;;9498:400;;;;;:::o;14228:148:4:-;14286:7;14321:13;:11;:13::i;:::-;14313:5;:21;14305:30;;;;;;14352:10;14363:5;14352:17;;;;;;;;;;;;;;;;14345:24;;14228:148;;;:::o;5804:175::-;5859:7;5952:11;:20;5964:7;5952:20;;;;;;;;;;;;;;;;;;;;;5945:27;;5804:175;;;:::o;5500:298::-;5555:7;5757:34;:17;:24;5775:5;5757:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5750:41;;5500:298;;;:::o;2596:110::-;1083:10;1073:20;;:6;;;;;;;;;;;:20;;;1065:59;;;;;;;;;;;;;;;;;;;;;;2448:7;;;;;;;;;;;2447:8;2439:39;;;;;;;;;;;;;;;;;;;;;;2662:4;2652:7;;:14;;;;;;;;;;;;;;;;;;2681:18;2688:10;2681:18;;;;;;;;;;;;;;;2596:110::o;1552:80::-;1593:7;1619:6;;;;;;;;;;;1612:13;;1552:80;:::o;20820:87::-;20861:13;20893:7;20886:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20820:87;:::o;7197:213::-;7282:10;7276:16;;:2;:16;;;;7268:25;;;;;;7340:8;7303:18;:30;7322:10;7303:30;;;;;;;;;;;;;;;:34;7334:2;7303:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7390:2;7363:40;;7378:10;7363:40;;;7394:8;7363:40;;;;;;;;;;;;;;;7197:213;;:::o;1783:496:6:-;1909:10;;;;;;;;;;;:19;;;1929:5;1936;1909:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1909:33:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1909:33:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1909:33:6;;;;;;;;;1901:77;;;;;;;;;;;;;;;;;;;;;;1997:15;2015:29;2031:5;2038;2015:15;:29::i;:::-;1997:47;;2109:1;2062:49;;:15;:24;2078:7;2062:24;;;;;;;;;;;:35;;;;;;;;;;;;:49;;;2054:84;;;;;;;;;;;;;;;;;;;;;;2157:32;2169:10;2181:7;2157:11;:32::i;:::-;2199:25;2204:10;2216:7;2199:4;:25::i;:::-;;2268:4;2234:15;:24;2250:7;2234:24;;;;;;;;;;;:31;;;:38;;;;;;;;;;;;;;;;;;1783:496;;;;;:::o;8206:211:4:-;8312:31;8325:4;8331:2;8335:7;8312:12;:31::i;:::-;8361:48;8384:4;8390:2;8394:7;8403:5;8361:22;:48::i;:::-;8353:57;;;;;;8206:211;;;;:::o;20913:102::-;20963:13;20995;20988:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20913:102;:::o;21021:151::-;21079:13;21112:16;21120:7;21112;:16::i;:::-;21104:25;;;;;;21146:10;:19;21157:7;21146:19;;;;;;;;;;;21139:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21021:151;;;:::o;7731:145::-;7811:4;7834:18;:25;7853:5;7834:25;;;;;;;;;;;;;;;:35;7860:8;7834:35;;;;;;;;;;;;;;;;;;;;;;;;;7827:42;;7731:145;;;;:::o;1148:398::-;1083:10;1073:20;;:6;;;;;;;;;;;:20;;;1065:59;;;;;;;;;;;;;;;;;;;;;;1379:28;1398:8;1379:18;:28::i;:::-;1378:29;1370:91;;;;;;;;;;;;;;;;;;;;;;1489:8;1480:6;;:17;;;;;;;;;;;;;;;;;;1513:26;1532:6;;;;;;;;;;;1513:26;;;;;;;;;;;;;;;1148:398;:::o;9123:246::-;9208:4;9224:13;9240:16;9248:7;9240;:16::i;:::-;9224:32;;9285:5;9274:16;;:7;:16;;;:51;;;;9318:7;9294:31;;:20;9306:7;9294:11;:20::i;:::-;:31;;;9274:51;:87;;;;9329:32;9346:5;9353:7;9329:16;:32::i;:::-;9274:87;9266:96;;;9123:246;;;;:::o;14751:239::-;14836:38;14856:4;14862:2;14866:7;14836:19;:38::i;:::-;14885:47;14918:4;14924:7;14885:32;:47::i;:::-;14943:40;14971:2;14975:7;14943:27;:40::i;:::-;14751:239;;;:::o;15245:196::-;15308:24;15320:2;15324:7;15308:11;:24::i;:::-;15343:40;15371:2;15375:7;15343:27;:40::i;:::-;15394;15426:7;15394:31;:40::i;:::-;15245:196;;:::o;21673:190::-;21738:16;21746:7;21738;:16::i;:::-;21730:49;;;;;;;;;;;;;;;;;;;;;;21812:43;21822:13;21812:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21837:17;21846:7;21837:8;:17::i;:::-;21812:9;:43::i;:::-;21790:10;:19;21801:7;21790:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;21673:190;:::o;8572:921:7:-;8652:4;8668:26;8697:77;8668:106;;8784:22;;:::i;:::-;8809:14;:12;:14::i;:::-;8784:39;;8861:2;:12;;;:19;8856:1;8841:5;:12;:16;:39;8833:48;;;;;;8938:27;;:::i;:::-;8968:21;;;;;;;;8984:1;8968:21;;;;8987:1;8968:21;;;8938:51;;9004:6;9013:1;9004:10;;8999:197;9020:5;:12;9016:1;:16;8999:197;;;9072:18;9061:5;9067:1;9061:8;;;;;;;;;;;;;;:29;9053:38;;;;;;9112:73;9129:4;9135:49;9154:2;:12;;;9171:1;9167;:5;9154:19;;;;;;;;;;;;;;9175:5;9181:1;9175:8;;;;;;;;;;;;;;9135:18;:49::i;:::-;9112:16;:73::i;:::-;9105:80;;9034:3;;;;;;;8999:197;;;;9212:39;9229:4;9235:2;:12;;;9248:1;9235:15;;;;;;;;;;;;;;9212:16;:39::i;:::-;9205:46;;9265:193;9300:5;:7;;;9309:5;:7;;;9331:20;9346:4;9331:14;:20::i;:::-;9353:2;:8;;;9376:23;9391:5;:7;;;9376:14;:23::i;:::-;9401:2;:8;;;9424:24;9439:2;:8;;;9424:14;:24::i;:::-;9450:2;:7;;;9265:20;:193::i;:::-;9261:207;;9467:1;9460:8;;;;;;;9261:207;9485:1;9478:8;;;;;8572:921;;;;;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11483:347:4:-;11604:4;11629:15;:2;:13;;;:15::i;:::-;11624:58;;11667:4;11660:11;;;;11624:58;11692:13;11724:2;11708:36;;;11745:10;11757:4;11763:7;11772:5;11708:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11708:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11708:70:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11708:70:4;;;;;;;;;11692:86;;4454:10;11806:16;;11796:26;;;:6;:26;;;;11788:35;;;11483:347;;;;;;;:::o;8611:152::-;8668:4;8684:13;8700:11;:20;8712:7;8700:20;;;;;;;;;;;;;;;;;;;;;8684:36;;8754:1;8737:19;;:5;:19;;;;8730:26;;;8611:152;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;10566:389:4:-;10667:16;10675:7;10667;:16::i;:::-;10659:24;;:4;:24;;;10651:37;;;;;;;;;;;;;;;;;;;;;;10720:1;10706:16;;:2;:16;;;;10698:25;;;;;;10742:23;10757:7;10742:14;:23::i;:::-;10784:35;:17;:23;10802:4;10784:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10829:33;:17;:21;10847:2;10829:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10895:2;10872:11;:20;10884:7;10872:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10940:7;10936:2;10921:27;;10930:4;10921:27;;;;;;;;;;;;10566:389;;;:::o;17217:1128::-;17479:22;17504:32;17534:1;17504:12;:18;17517:4;17504:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17479:57;;17546:18;17567:17;:26;17585:7;17567:26;;;;;;;;;;;;17546:47;;17711:14;17697:10;:28;17693:323;;17741:19;17763:12;:18;17776:4;17763:18;;;;;;;;;;;;;;;17782:14;17763:34;;;;;;;;;;;;;;;;17741:56;;17845:11;17812:12;:18;17825:4;17812:18;;;;;;;;;;;;;;;17831:10;17812:30;;;;;;;;;;;;;;;:44;;;;17961:10;17928:17;:30;17946:11;17928:30;;;;;;;;;;;:43;;;;17693:323;;18102:12;:18;18115:4;18102:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17217:1128;;;;:::o;16063:183::-;16176:12;:16;16189:2;16176:16;;;;;;;;;;;;;;;:23;;;;16147:17;:26;16165:7;16147:26;;;;;;;;;;;:52;;;;16209:12;:16;16222:2;16209:16;;;;;;;;;;;;;;;16231:7;16209:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16209:30:4;;;;;;;;;;;;;;;;;;;;;;16063:183;;:::o;9746:304::-;9818:16;9826:7;9818;:16::i;:::-;9817:17;9809:50;;;;;;;;;;;;;;;;;;;;;;9891:1;9877:16;;:2;:16;;;;9869:44;;;;;;;;;;;;;;;;;;;;;;9949:2;9926:11;:20;9938:7;9926:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9961:33;:17;:21;9979:2;9961:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10035:7;10031:2;10010:33;;10027:1;10010:33;;;;;;;;;;;;9746:304;;:::o;16441:161::-;16544:10;:17;;;;16517:15;:24;16533:7;16517:24;;;;;;;;;;;:44;;;;16571:10;16587:7;16571:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16571:24:4;;;;;;;;;;;;;;;;;;;;;;16441:161;:::o;43271:465:5:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:5;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;6616:1951:7:-;6663:22;;:::i;:::-;6708:169;;;;;;;;6732:66;6708:169;;;;6809:66;6708:169;;;6697:2;:8;;:180;;;;6897:327;;;;;;;;;;;;;;;;6922:66;6897:327;;;;6999:66;6897:327;;;;;;;;;;;;;;;7078:66;6897:327;;;;7155:66;6897:327;;;;;;6887:2;:7;;:337;;;;7245:327;;;;;;;;;;;;;;;;7270:66;7245:327;;;;7347:66;7245:327;;;;;;;;;;;;;;;7426:66;7245:327;;;;7503:66;7245:327;;;;;;7234:2;:8;;:338;;;;7593:327;;;;;;;;;;;;;;;;7618:66;7593:327;;;;7695:66;7593:327;;;;;;;;;;;;;;;7774:66;7593:327;;;;7851:66;7593:327;;;;;;7582:2;:8;;:338;;;;7967:1;7945:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7930:2;:12;;:39;;;;7997:169;;;;;;;;8021:66;7997:169;;;;8098:66;7997:169;;;7979:2;:12;;;7992:1;7979:15;;;;;;;;;;;;;:187;;;;8194:169;;;;;;;;8218:66;8194:169;;;;8295:66;8194:169;;;8176:2;:12;;;8189:1;8176:15;;;;;;;;;;;;;:187;;;;8391:169;;;;;;;;8415:66;8391:169;;;;8492:66;8391:169;;;8373:2;:12;;;8386:1;8373:15;;;;;;;;;;;;;:187;;;;6616:1951;:::o;3117:454::-;3186:16;;:::i;:::-;3214:20;;:::i;:::-;3255:1;:3;;;3244:5;3250:1;3244:8;;;;;;;;;;:14;;;;;3279:1;:3;;;3268:5;3274:1;3268:8;;;;;;;;;;:14;;;;;3303:1;3292:5;3298:1;3292:8;;;;;;;;;;:12;;;;;3314;3418:4;3415:1;3409:4;3402:5;3399:1;3392:4;3385:5;3381:16;3370:53;3359:64;;3500:7;3513:1;3508:20;;;;3493:35;;3508:20;3517:9;3493:35;;3556:7;3547:17;;;;;;3117:454;;;;;;:::o;2467:493::-;2546:16;;:::i;:::-;2574:20;;:::i;:::-;2615:2;:4;;;2604:5;2610:1;2604:8;;;;;;;;;;:15;;;;;2640:2;:4;;;2629:5;2635:1;2629:8;;;;;;;;;;:15;;;;;2665:2;:4;;;2654:5;2660:1;2654:8;;;;;;;;;;:15;;;;;2690:2;:4;;;2679:5;2685:1;2679:8;;;;;;;;;;:15;;;;;2704:12;2808:4;2805:1;2799:4;2792:5;2789:1;2782:4;2775:5;2771:16;2760:53;2749:64;;2890:7;2903:1;2898:20;;;;2883:35;;2898:20;2907:9;2883:35;;2945:7;2937:16;;;;;;2467:493;;;;;;:::o;2076:340::-;2133:14;;:::i;:::-;2211:6;2220:77;2211:86;;2318:1;2311;:3;;;:8;:20;;;;;2330:1;2323;:3;;;:8;2311:20;2307:58;;;2352:13;;;;;;;;2360:1;2352:13;;;;2363:1;2352:13;;;2345:20;;;;;2307:58;2382:27;;;;;;;;2390:1;:3;;;2382:27;;;;2406:1;2400;:3;;;:7;;;;;;2395:1;:13;2382:27;;;2375:34;;;2076:340;;;;:::o;5713:552::-;5964:4;5980:19;6016:1;6002:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5980:38;;6028:19;6064:1;6050:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6028:38;;6084:2;6076;6079:1;6076:5;;;;;;;;;;;;;:10;;;;6104:2;6096;6099:1;6096:5;;;;;;;;;;;;;:10;;;;6124:2;6116;6119:1;6116:5;;;;;;;;;;;;;:10;;;;6144:2;6136;6139:1;6136:5;;;;;;;;;;;;;:10;;;;6164:2;6156;6159:1;6156:5;;;;;;;;;;;;;:10;;;;6184:2;6176;6179:1;6176:5;;;;;;;;;;;;;:10;;;;6204:2;6196;6199:1;6196:5;;;;;;;;;;;;;:10;;;;6224:2;6216;6219:1;6216:5;;;;;;;;;;;;;:10;;;;6243:15;6251:2;6255;6243:7;:15::i;:::-;6236:22;;;;5713:552;;;;;;;;;;:::o;11911:171:4:-;12010:1;11974:38;;:15;:24;11990:7;11974:24;;;;;;;;;;;;;;;;;;;;;:38;;;11970:106;;12063:1;12028:15;:24;12044:7;12028:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11970:106;11911:171;:::o;1367:108:0:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:5:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:5;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;3782:923:7:-;3864:4;3901:2;:9;3888:2;:9;:22;3880:31;;;;;;3921:13;3937:2;:9;3921:25;;3956:14;3984:1;3973:8;:12;3956:29;;3995:19;4028:9;4017:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;4017:21:7;;;;3995:43;;4053:6;4062:1;4053:10;;4048:307;4069:8;4065:1;:12;4048:307;;;4125:2;4128:1;4125:5;;;;;;;;;;;;;;:7;;;4106:5;4120:1;4116;4112;:5;:9;4106:16;;;;;;;;;;;;;:26;;;;;4165:2;4168:1;4165:5;;;;;;;;;;;;;;:7;;;4146:5;4160:1;4156;4152;:5;:9;4146:16;;;;;;;;;;;;;:26;;;;;4205:2;4208:1;4205:5;;;;;;;;;;;;;;:7;;;4213:1;4205:10;;;;;;;;;;;4186:5;4200:1;4196;4192;:5;:9;4186:16;;;;;;;;;;;;;:29;;;;;4248:2;4251:1;4248:5;;;;;;;;;;;;;;:7;;;4256:1;4248:10;;;;;;;;;;;4229:5;4243:1;4239;4235;:5;:9;4229:16;;;;;;;;;;;;;:29;;;;;4291:2;4294:1;4291:5;;;;;;;;;;;;;;:7;;;4299:1;4291:10;;;;;;;;;;;4272:5;4286:1;4282;4278;:5;:9;4272:16;;;;;;;;;;;;;:29;;;;;4334:2;4337:1;4334:5;;;;;;;;;;;;;;:7;;;4342:1;4334:10;;;;;;;;;;;4315:5;4329:1;4325;4321;:5;:9;4315:16;;;;;;;;;;;;;:29;;;;;4079:3;;;;;;;4048:307;;;;4364:18;;:::i;:::-;4392:12;4525:4;4520:3;4513:4;4502:9;4498:20;4491:4;4484:5;4480:16;4477:1;4470:4;4463:5;4459:16;4448:82;4437:93;;4607:7;4620:1;4615:20;;;;4600:35;;4615:20;4624:9;4600:35;;4662:7;4654:16;;;;;;4697:1;4687:3;4691:1;4687:6;;;;;;;;;;;:11;;4680:18;;;;;;;3782:923;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;340:2279:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;340:2279:6;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;340:2279:6;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;340:2279:6;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;340:2279:6;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;161:608;;272:3;265:4;257:6;253:17;249:27;239:2;;290:1;287;280:12;239:2;314:4;333:74;348:58;399:6;348:58;;;333:74;;;324:83;;424:5;483:6;530:3;522:4;514:6;510:17;505:3;501:27;498:36;495:2;;;547:1;544;537:12;495:2;572:1;557:206;582:6;579:1;576:13;557:206;;;640:3;662:37;695:3;683:10;662:37;;;657:3;650:50;723:4;718:3;714:14;707:21;;751:4;746:3;742:14;735:21;;614:149;604:1;601;597:9;592:14;;557:206;;;561:14;232:537;;;;;;;;796:616;;911:3;904:4;896:6;892:17;888:27;878:2;;929:1;926;919:12;878:2;953:4;972:78;987:62;1042:6;987:62;;;972:78;;;963:87;;1067:5;1126:6;1173:3;1165:4;1157:6;1153:17;1148:3;1144:27;1141:36;1138:2;;;1190:1;1187;1180:12;1138:2;1215:1;1200:206;1225:6;1222:1;1219:13;1200:206;;;1283:3;1305:37;1338:3;1326:10;1305:37;;;1300:3;1293:50;1366:4;1361:3;1357:14;1350:21;;1394:4;1389:3;1385:14;1378:21;;1257:149;1247:1;1244;1240:9;1235:14;;1200:206;;;1204:14;871:541;;;;;;;;1420:124;;1497:6;1484:20;1475:29;;1509:30;1533:5;1509:30;;;1469:75;;;;;1551:128;;1632:6;1626:13;1617:22;;1644:30;1668:5;1644:30;;;1611:68;;;;;1686:130;;1766:6;1753:20;1744:29;;1778:33;1805:5;1778:33;;;1738:78;;;;;1823:128;;1902:6;1889:20;1880:29;;1914:32;1940:5;1914:32;;;1874:77;;;;;1958:132;;2041:6;2035:13;2026:22;;2053:32;2079:5;2053:32;;;2020:70;;;;;2098:440;;2199:3;2192:4;2184:6;2180:17;2176:27;2166:2;;2217:1;2214;2207:12;2166:2;2254:6;2241:20;2276:64;2291:48;2332:6;2291:48;;;2276:64;;;2267:73;;2360:6;2353:5;2346:21;2396:4;2388:6;2384:17;2429:4;2422:5;2418:16;2464:3;2455:6;2450:3;2446:16;2443:25;2440:2;;;2481:1;2478;2471:12;2440:2;2491:41;2525:6;2520:3;2515;2491:41;;;2159:379;;;;;;;;2547:442;;2649:3;2642:4;2634:6;2630:17;2626:27;2616:2;;2667:1;2664;2657:12;2616:2;2704:6;2691:20;2726:65;2741:49;2783:6;2741:49;;;2726:65;;;2717:74;;2811:6;2804:5;2797:21;2847:4;2839:6;2835:17;2880:4;2873:5;2869:16;2915:3;2906:6;2901:3;2897:16;2894:25;2891:2;;;2932:1;2929;2922:12;2891:2;2942:41;2976:6;2971:3;2966;2942:41;;;2609:380;;;;;;;;3026:457;;3136:4;3124:9;3119:3;3115:19;3111:30;3108:2;;;3154:1;3151;3144:12;3108:2;3172:20;3187:4;3172:20;;;3163:29;;3239:1;3271:49;3316:3;3307:6;3296:9;3292:22;3271:49;;;3264:4;3257:5;3253:16;3246:75;3202:130;3379:2;3412:49;3457:3;3448:6;3437:9;3433:22;3412:49;;;3405:4;3398:5;3394:16;3387:75;3342:131;3102:381;;;;;3519:495;;3629:4;3617:9;3612:3;3608:19;3604:30;3601:2;;;3647:1;3644;3637:12;3601:2;3665:20;3680:4;3665:20;;;3656:29;;3732:1;3764:68;3828:3;3819:6;3808:9;3804:22;3764:68;;;3757:4;3750:5;3746:16;3739:94;3695:149;3891:2;3924:68;3988:3;3979:6;3968:9;3964:22;3924:68;;;3917:4;3910:5;3906:16;3899:94;3854:150;3595:419;;;;;4049:666;;4161:6;4149:9;4144:3;4140:19;4136:32;4133:2;;;4181:1;4178;4171:12;4133:2;4199:20;4214:4;4199:20;;;4190:29;;4266:1;4298:70;4364:3;4355:6;4344:9;4340:22;4298:70;;;4291:4;4284:5;4280:16;4273:96;4229:151;4427:2;4460:70;4526:3;4517:6;4506:9;4502:22;4460:70;;;4453:4;4446:5;4442:16;4435:96;4390:152;4589:3;4623:70;4689:3;4680:6;4669:9;4665:22;4623:70;;;4616:4;4609:5;4605:16;4598:96;4552:153;4127:588;;;;;4722:130;;4802:6;4789:20;4780:29;;4814:33;4841:5;4814:33;;;4774:78;;;;;4859:241;;4963:2;4951:9;4942:7;4938:23;4934:32;4931:2;;;4979:1;4976;4969:12;4931:2;5014:1;5031:53;5076:7;5067:6;5056:9;5052:22;5031:53;;;5021:63;;4993:97;4925:175;;;;;5107:366;;;5228:2;5216:9;5207:7;5203:23;5199:32;5196:2;;;5244:1;5241;5234:12;5196:2;5279:1;5296:53;5341:7;5332:6;5321:9;5317:22;5296:53;;;5286:63;;5258:97;5386:2;5404:53;5449:7;5440:6;5429:9;5425:22;5404:53;;;5394:63;;5365:98;5190:283;;;;;;5480:491;;;;5618:2;5606:9;5597:7;5593:23;5589:32;5586:2;;;5634:1;5631;5624:12;5586:2;5669:1;5686:53;5731:7;5722:6;5711:9;5707:22;5686:53;;;5676:63;;5648:97;5776:2;5794:53;5839:7;5830:6;5819:9;5815:22;5794:53;;;5784:63;;5755:98;5884:2;5902:53;5947:7;5938:6;5927:9;5923:22;5902:53;;;5892:63;;5863:98;5580:391;;;;;;5978:721;;;;;6142:3;6130:9;6121:7;6117:23;6113:33;6110:2;;;6159:1;6156;6149:12;6110:2;6194:1;6211:53;6256:7;6247:6;6236:9;6232:22;6211:53;;;6201:63;;6173:97;6301:2;6319:53;6364:7;6355:6;6344:9;6340:22;6319:53;;;6309:63;;6280:98;6409:2;6427:53;6472:7;6463:6;6452:9;6448:22;6427:53;;;6417:63;;6388:98;6545:2;6534:9;6530:18;6517:32;6569:18;6561:6;6558:30;6555:2;;;6601:1;6598;6591:12;6555:2;6621:62;6675:7;6666:6;6655:9;6651:22;6621:62;;;6611:72;;6496:193;6104:595;;;;;;;;6706:360;;;6824:2;6812:9;6803:7;6799:23;6795:32;6792:2;;;6840:1;6837;6830:12;6792:2;6875:1;6892:53;6937:7;6928:6;6917:9;6913:22;6892:53;;;6882:63;;6854:97;6982:2;7000:50;7042:7;7033:6;7022:9;7018:22;7000:50;;;6990:60;;6961:95;6786:280;;;;;;7073:366;;;7194:2;7182:9;7173:7;7169:23;7165:32;7162:2;;;7210:1;7207;7200:12;7162:2;7245:1;7262:53;7307:7;7298:6;7287:9;7283:22;7262:53;;;7252:63;;7224:97;7352:2;7370:53;7415:7;7406:6;7395:9;7391:22;7370:53;;;7360:63;;7331:98;7156:283;;;;;;7446:366;;;7567:2;7555:9;7546:7;7542:23;7538:32;7535:2;;;7583:1;7580;7573:12;7535:2;7618:1;7635:53;7680:7;7671:6;7660:9;7656:22;7635:53;;;7625:63;;7597:97;7725:2;7743:53;7788:7;7779:6;7768:9;7764:22;7743:53;;;7733:63;;7704:98;7529:283;;;;;;7819:710;;;;;8020:3;8008:9;7999:7;7995:23;7991:33;7988:2;;;8037:1;8034;8027:12;7988:2;8072:1;8089:53;8134:7;8125:6;8114:9;8110:22;8089:53;;;8079:63;;8051:97;8179:2;8197:53;8242:7;8233:6;8222:9;8218:22;8197:53;;;8187:63;;8158:98;8287:2;8305:76;8373:7;8364:6;8353:9;8349:22;8305:76;;;8295:86;;8266:121;8418:3;8437:76;8505:7;8496:6;8485:9;8481:22;8437:76;;;8427:86;;8397:122;7982:547;;;;;;;;8536:257;;8648:2;8636:9;8627:7;8623:23;8619:32;8616:2;;;8664:1;8661;8654:12;8616:2;8699:1;8716:61;8769:7;8760:6;8749:9;8745:22;8716:61;;;8706:71;;8678:105;8610:183;;;;;8800:472;;;8931:2;8919:9;8910:7;8906:23;8902:32;8899:2;;;8947:1;8944;8937:12;8899:2;8982:1;8999:53;9044:7;9035:6;9024:9;9020:22;8999:53;;;8989:63;;8961:97;9117:2;9106:9;9102:18;9089:32;9141:18;9133:6;9130:30;9127:2;;;9173:1;9170;9163:12;9127:2;9193:63;9248:7;9239:6;9228:9;9224:22;9193:63;;;9183:73;;9068:194;8893:379;;;;;;9279:701;;;;9436:2;9424:9;9415:7;9411:23;9407:32;9404:2;;;9452:1;9449;9442:12;9404:2;9487:1;9504:53;9549:7;9540:6;9529:9;9525:22;9504:53;;;9494:63;;9466:97;9622:2;9611:9;9607:18;9594:32;9646:18;9638:6;9635:30;9632:2;;;9678:1;9675;9668:12;9632:2;9698:63;9753:7;9744:6;9733:9;9729:22;9698:63;;;9688:73;;9573:194;9826:2;9815:9;9811:18;9798:32;9850:18;9842:6;9839:30;9836:2;;;9882:1;9879;9872:12;9836:2;9902:62;9956:7;9947:6;9936:9;9932:22;9902:62;;;9892:72;;9777:193;9398:582;;;;;;9987:239;;10090:2;10078:9;10069:7;10065:23;10061:32;10058:2;;;10106:1;10103;10096:12;10058:2;10141:1;10158:52;10202:7;10193:6;10182:9;10178:22;10158:52;;;10148:62;;10120:96;10052:174;;;;;10233:261;;10347:2;10335:9;10326:7;10322:23;10318:32;10315:2;;;10363:1;10360;10353:12;10315:2;10398:1;10415:63;10470:7;10461:6;10450:9;10446:22;10415:63;;;10405:73;;10377:107;10309:185;;;;;10501:460;;;10668:3;10656:9;10647:7;10643:23;10639:33;10636:2;;;10685:1;10682;10675:12;10636:2;10720:1;10737:76;10805:7;10796:6;10785:9;10781:22;10737:76;;;10727:86;;10699:120;10850:3;10869:76;10937:7;10928:6;10917:9;10913:22;10869:76;;;10859:86;;10829:122;10630:331;;;;;;10968:241;;11072:2;11060:9;11051:7;11047:23;11043:32;11040:2;;;11088:1;11085;11078:12;11040:2;11123:1;11140:53;11185:7;11176:6;11165:9;11161:22;11140:53;;;11130:63;;11102:97;11034:175;;;;;11217:173;;11304:46;11346:3;11338:6;11304:46;;;11379:4;11374:3;11370:14;11356:28;;11297:93;;;;;11399:189;;11494:54;11544:3;11536:6;11494:54;;;11577:4;11572:3;11568:14;11554:28;;11487:101;;;;;11596:142;11687:45;11726:5;11687:45;;;11682:3;11675:58;11669:69;;;11745:113;11828:24;11846:5;11828:24;;;11823:3;11816:37;11810:48;;;11898:660;12031:52;12077:5;12031:52;;;12096:84;12173:6;12168:3;12096:84;;;12089:91;;12201:54;12249:5;12201:54;;;12275:7;12303:1;12288:258;12313:6;12310:1;12307:13;12288:258;;;12380:6;12374:13;12401:63;12460:3;12445:13;12401:63;;;12394:70;;12481:58;12532:6;12481:58;;;12471:68;;12345:201;12335:1;12332;12328:9;12323:14;;12288:258;;;12292:14;12010:548;;;;;;12599:704;12750:52;12796:5;12750:52;;;12815:102;12910:6;12905:3;12815:102;;;12808:109;;12938:54;12986:5;12938:54;;;13012:7;13040:1;13025:266;13050:6;13047:1;13044:13;13025:266;;;13117:6;13111:13;13138:71;13205:3;13190:13;13138:71;;;13131:78;;13226:58;13277:6;13226:58;;;13216:68;;13082:209;13072:1;13069;13065:9;13060:14;;13025:266;;;13029:14;12729:574;;;;;;13344:624;13463:48;13505:5;13463:48;;;13524:74;13591:6;13586:3;13524:74;;;13517:81;;13619:50;13663:5;13619:50;;;13689:7;13717:1;13702:254;13727:6;13724:1;13721:13;13702:254;;;13794:6;13788:13;13815:63;13874:3;13859:13;13815:63;;;13808:70;;13895:54;13942:6;13895:54;;;13885:64;;13759:197;13749:1;13746;13742:9;13737:14;;13702:254;;;13706:14;13442:526;;;;;;14009:688;14156:48;14198:5;14156:48;;;14217:102;14312:6;14307:3;14217:102;;;14210:109;;14340:50;14384:5;14340:50;;;14410:7;14438:1;14423:262;14448:6;14445:1;14442:13;14423:262;;;14515:6;14509:13;14536:71;14603:3;14588:13;14536:71;;;14529:78;;14624:54;14671:6;14624:54;;;14614:64;;14480:205;14470:1;14467;14463:9;14458:14;;14423:262;;;14427:14;14135:562;;;;;;14705:104;14782:21;14797:5;14782:21;;;14777:3;14770:34;14764:45;;;14816:113;14899:24;14917:5;14899:24;;;14894:3;14887:37;14881:48;;;14936:343;;15046:38;15078:5;15046:38;;;15096:70;15159:6;15154:3;15096:70;;;15089:77;;15171:52;15216:6;15211:3;15204:4;15197:5;15193:16;15171:52;;;15244:29;15266:6;15244:29;;;15239:3;15235:39;15228:46;;15026:253;;;;;;15286:347;;15398:39;15431:5;15398:39;;;15449:71;15513:6;15508:3;15449:71;;;15442:78;;15525:52;15570:6;15565:3;15558:4;15551:5;15547:16;15525:52;;;15598:29;15620:6;15598:29;;;15593:3;15589:39;15582:46;;15378:255;;;;;;15641:315;;15801:67;15865:2;15860:3;15801:67;;;15794:74;;15901:17;15897:1;15892:3;15888:11;15881:38;15947:2;15942:3;15938:12;15931:19;;15787:169;;;;15965:320;;16125:67;16189:2;16184:3;16125:67;;;16118:74;;16225:22;16221:1;16216:3;16212:11;16205:43;16276:2;16271:3;16267:12;16260:19;;16111:174;;;;16294:320;;16454:67;16518:2;16513:3;16454:67;;;16447:74;;16554:22;16550:1;16545:3;16541:11;16534:43;16605:2;16600:3;16596:12;16589:19;;16440:174;;;;16623:331;;16783:67;16847:2;16842:3;16783:67;;;16776:74;;16883:33;16879:1;16874:3;16870:11;16863:54;16945:2;16940:3;16936:12;16929:19;;16769:185;;;;16963:320;;17123:67;17187:2;17182:3;17123:67;;;17116:74;;17223:22;17219:1;17214:3;17210:11;17203:43;17274:2;17269:3;17265:12;17258:19;;17109:174;;;;17292:386;;17452:67;17516:2;17511:3;17452:67;;;17445:74;;17552:34;17548:1;17543:3;17539:11;17532:55;17621:19;17616:2;17611:3;17607:12;17600:41;17669:2;17664:3;17660:12;17653:19;;17438:240;;;;17687:262;;17847:66;17911:1;17906:3;17847:66;;;17840:73;;17941:1;17936:3;17932:11;17925:18;;17833:116;;;;17958:326;;18118:67;18182:2;18177:3;18118:67;;;18111:74;;18218:28;18214:1;18209:3;18205:11;18198:49;18275:2;18270:3;18266:12;18259:19;;18104:180;;;;18293:321;;18453:67;18517:2;18512:3;18453:67;;;18446:74;;18553:23;18549:1;18544:3;18540:11;18533:44;18605:2;18600:3;18596:12;18589:19;;18439:175;;;;18623:318;;18783:67;18847:2;18842:3;18783:67;;;18776:74;;18883:20;18879:1;18874:3;18870:11;18863:41;18932:2;18927:3;18923:12;18916:19;;18769:172;;;;18950:328;;19110:67;19174:2;19169:3;19110:67;;;19103:74;;19210:30;19206:1;19201:3;19197:11;19190:51;19269:2;19264:3;19260:12;19253:19;;19096:182;;;;19287:322;;19447:67;19511:2;19506:3;19447:67;;;19440:74;;19547:24;19543:1;19538:3;19534:11;19527:45;19600:2;19595:3;19591:12;19584:19;;19433:176;;;;19672:456;19801:4;19796:3;19792:14;19881:4;19874:5;19870:16;19864:23;19893:63;19950:4;19945:3;19941:14;19927:12;19893:63;;;19821:141;20032:4;20025:5;20021:16;20015:23;20044:63;20101:4;20096:3;20092:14;20078:12;20044:63;;;19972:141;19774:354;;;;20190:540;20319:4;20314:3;20310:14;20399:4;20392:5;20388:16;20382:23;20411:105;20510:4;20505:3;20501:14;20487:12;20411:105;;;20339:183;20592:4;20585:5;20581:16;20575:23;20604:105;20703:4;20698:3;20694:14;20680:12;20604:105;;;20532:183;20292:438;;;;20790:757;20929:6;20924:3;20920:16;21011:4;21004:5;21000:16;20994:23;21023:109;21126:4;21121:3;21117:14;21103:12;21023:109;;;20951:187;21208:4;21201:5;21197:16;21191:23;21220:109;21323:4;21318:3;21314:14;21300:12;21220:109;;;21148:187;21405:4;21398:5;21394:16;21388:23;21417:109;21520:4;21515:3;21511:14;21497:12;21417:109;;;21345:187;20902:645;;;;21554:103;21627:24;21645:5;21627:24;;;21622:3;21615:37;21609:48;;;21664:113;21747:24;21765:5;21747:24;;;21742:3;21735:37;21729:48;;;21784:111;21865:24;21883:5;21865:24;;;21860:3;21853:37;21847:48;;;21902:152;22003:45;22023:24;22041:5;22023:24;;;22003:45;;;21998:3;21991:58;21985:69;;;22061:1338;;22478:75;22549:3;22540:6;22478:75;;;22575:2;22570:3;22566:12;22559:19;;22589:75;22660:3;22651:6;22589:75;;;22686:2;22681:3;22677:12;22670:19;;22700:117;22813:3;22804:6;22700:117;;;22839:2;22834:3;22830:12;22823:19;;22853:117;22966:3;22957:6;22853:117;;;22992:2;22987:3;22983:12;22976:19;;23006:75;23077:3;23068:6;23006:75;;;23103:2;23098:3;23094:12;23087:19;;23117:75;23188:3;23179:6;23117:75;;;23214:2;23209:3;23205:12;23198:19;;23228:121;23345:3;23336:6;23228:121;;;23371:2;23366:3;23362:12;23355:19;;23391:3;23384:10;;22466:933;;;;;;;;;;;23406:213;;23524:2;23513:9;23509:18;23501:26;;23538:71;23606:1;23595:9;23591:17;23582:6;23538:71;;;23495:124;;;;;23626:229;;23752:2;23741:9;23737:18;23729:26;;23766:79;23842:1;23831:9;23827:17;23818:6;23766:79;;;23723:132;;;;;23862:647;;24090:3;24079:9;24075:19;24067:27;;24105:79;24181:1;24170:9;24166:17;24157:6;24105:79;;;24195:72;24263:2;24252:9;24248:18;24239:6;24195:72;;;24278;24346:2;24335:9;24331:18;24322:6;24278:72;;;24398:9;24392:4;24388:20;24383:2;24372:9;24368:18;24361:48;24423:76;24494:4;24485:6;24423:76;;;24415:84;;24061:448;;;;;;;;24516:324;;24662:2;24651:9;24647:18;24639:26;;24676:71;24744:1;24733:9;24729:17;24720:6;24676:71;;;24758:72;24826:2;24815:9;24811:18;24802:6;24758:72;;;24633:207;;;;;;24847:201;;24959:2;24948:9;24944:18;24936:26;;24973:65;25035:1;25024:9;25020:17;25011:6;24973:65;;;24930:118;;;;;25055:213;;25173:2;25162:9;25158:18;25150:26;;25187:71;25255:1;25244:9;25240:17;25231:6;25187:71;;;25144:124;;;;;25275:301;;25413:2;25402:9;25398:18;25390:26;;25463:9;25457:4;25453:20;25449:1;25438:9;25434:17;25427:47;25488:78;25561:4;25552:6;25488:78;;;25480:86;;25384:192;;;;;25583:407;;25774:2;25763:9;25759:18;25751:26;;25824:9;25818:4;25814:20;25810:1;25799:9;25795:17;25788:47;25849:131;25975:4;25849:131;;;25841:139;;25745:245;;;;25997:407;;26188:2;26177:9;26173:18;26165:26;;26238:9;26232:4;26228:20;26224:1;26213:9;26209:17;26202:47;26263:131;26389:4;26263:131;;;26255:139;;26159:245;;;;26411:407;;26602:2;26591:9;26587:18;26579:26;;26652:9;26646:4;26642:20;26638:1;26627:9;26623:17;26616:47;26677:131;26803:4;26677:131;;;26669:139;;26573:245;;;;26825:407;;27016:2;27005:9;27001:18;26993:26;;27066:9;27060:4;27056:20;27052:1;27041:9;27037:17;27030:47;27091:131;27217:4;27091:131;;;27083:139;;26987:245;;;;27239:407;;27430:2;27419:9;27415:18;27407:26;;27480:9;27474:4;27470:20;27466:1;27455:9;27451:17;27444:47;27505:131;27631:4;27505:131;;;27497:139;;27401:245;;;;27653:407;;27844:2;27833:9;27829:18;27821:26;;27894:9;27888:4;27884:20;27880:1;27869:9;27865:17;27858:47;27919:131;28045:4;27919:131;;;27911:139;;27815:245;;;;28067:407;;28258:2;28247:9;28243:18;28235:26;;28308:9;28302:4;28298:20;28294:1;28283:9;28279:17;28272:47;28333:131;28459:4;28333:131;;;28325:139;;28229:245;;;;28481:407;;28672:2;28661:9;28657:18;28649:26;;28722:9;28716:4;28712:20;28708:1;28697:9;28693:17;28686:47;28747:131;28873:4;28747:131;;;28739:139;;28643:245;;;;28895:407;;29086:2;29075:9;29071:18;29063:26;;29136:9;29130:4;29126:20;29122:1;29111:9;29107:17;29100:47;29161:131;29287:4;29161:131;;;29153:139;;29057:245;;;;29309:407;;29500:2;29489:9;29485:18;29477:26;;29550:9;29544:4;29540:20;29536:1;29525:9;29521:17;29514:47;29575:131;29701:4;29575:131;;;29567:139;;29471:245;;;;29723:407;;29914:2;29903:9;29899:18;29891:26;;29964:9;29958:4;29954:20;29950:1;29939:9;29935:17;29928:47;29989:131;30115:4;29989:131;;;29981:139;;29885:245;;;;30137:407;;30328:2;30317:9;30313:18;30305:26;;30378:9;30372:4;30368:20;30364:1;30353:9;30349:17;30342:47;30403:131;30529:4;30403:131;;;30395:139;;30299:245;;;;30551:510;;30789:3;30778:9;30774:19;30766:27;;30804:117;30918:1;30907:9;30903:17;30894:6;30804:117;;;30932:119;31046:3;31035:9;31031:19;31022:6;30932:119;;;30760:301;;;;;;31068:213;;31186:2;31175:9;31171:18;31163:26;;31200:71;31268:1;31257:9;31253:17;31244:6;31200:71;;;31157:124;;;;;31288:256;;31350:2;31344:9;31334:19;;31388:4;31380:6;31376:17;31487:6;31475:10;31472:22;31451:18;31439:10;31436:34;31433:62;31430:2;;;31508:1;31505;31498:12;31430:2;31528:10;31524:2;31517:22;31328:216;;;;;31551:240;;31704:18;31696:6;31693:30;31690:2;;;31736:1;31733;31726:12;31690:2;31771:4;31763:6;31759:17;31751:25;;31627:164;;;;31798:244;;31955:18;31947:6;31944:30;31941:2;;;31987:1;31984;31977:12;31941:2;32022:4;32014:6;32010:17;32002:25;;31878:164;;;;32049:321;;32192:18;32184:6;32181:30;32178:2;;;32224:1;32221;32214:12;32178:2;32291:4;32287:9;32280:4;32272:6;32268:17;32264:33;32256:41;;32355:4;32349;32345:15;32337:23;;32115:255;;;;32377:322;;32521:18;32513:6;32510:30;32507:2;;;32553:1;32550;32543:12;32507:2;32620:4;32616:9;32609:4;32601:6;32597:17;32593:33;32585:41;;32684:4;32678;32674:15;32666:23;;32444:255;;;;32706:93;;32786:3;32778:11;;32772:27;;;;32806:97;;32890:3;32882:11;;32876:27;;;;32910:104;;33000:4;32990:14;;32978:36;;;;33021:108;;33115:4;33105:14;;33093:36;;;;33136:121;;33229:5;33223:12;33213:22;;33194:63;;;;33264:122;;33358:5;33352:12;33342:22;;33323:63;;;;33393:102;;33485:4;33480:3;33476:14;33468:22;;33462:33;;;;33502:106;;33598:4;33593:3;33589:14;33581:22;;33575:33;;;;33616:130;;33737:3;33722:18;;33715:31;;;;;33755:140;;33886:3;33871:18;;33864:31;;;;;33904:158;;34053:3;34038:18;;34031:31;;;;;34071:162;;34185:6;34180:3;34173:19;34222:4;34217:3;34213:14;34198:29;;34166:67;;;;;34242:163;;34357:6;34352:3;34345:19;34394:4;34389:3;34385:14;34370:29;;34338:67;;;;;34413:91;;34475:24;34493:5;34475:24;;;34464:35;;34458:46;;;;34511:85;;34584:5;34577:13;34570:21;34559:32;;34553:43;;;;34603:72;;34665:5;34654:16;;34648:27;;;;34682:144;;34754:66;34747:5;34743:78;34732:89;;34726:100;;;;34833:121;;34906:42;34899:5;34895:54;34884:65;;34878:76;;;;34961:72;;35023:5;35012:16;;35006:27;;;;35040:129;;35127:37;35158:5;35127:37;;;35114:50;;35108:61;;;;35176:121;;35255:37;35286:5;35255:37;;;35242:50;;35236:61;;;;35304:108;;35383:24;35401:5;35383:24;;;35370:37;;35364:48;;;;35420:145;35501:6;35496:3;35491;35478:30;35557:1;35548:6;35543:3;35539:16;35532:27;35471:94;;;;35574:268;35639:1;35646:101;35660:6;35657:1;35654:13;35646:101;;;35736:1;35731:3;35727:11;35721:18;35717:1;35712:3;35708:11;35701:39;35682:2;35679:1;35675:10;35670:15;;35646:101;;;35762:6;35759:1;35756:13;35753:2;;;35827:1;35818:6;35813:3;35809:16;35802:27;35753:2;35623:219;;;;;35850:74;;35914:5;35903:16;;35897:27;;;;35931:97;;36019:2;36015:7;36010:2;36003:5;35999:14;35995:28;35985:38;;35979:49;;;;36036:117;36105:24;36123:5;36105:24;;;36098:5;36095:35;36085:2;;36144:1;36141;36134:12;36085:2;36079:74;;36160:111;36226:21;36241:5;36226:21;;;36219:5;36216:32;36206:2;;36262:1;36259;36252:12;36206:2;36200:71;;36278:117;36347:24;36365:5;36347:24;;;36340:5;36337:35;36327:2;;36386:1;36383;36376:12;36327:2;36321:74;;36402:115;36470:23;36487:5;36470:23;;;36463:5;36460:34;36450:2;;36508:1;36505;36498:12;36450:2;36444:73;;36524:117;36593:24;36611:5;36593:24;;;36586:5;36583:35;36573:2;;36632:1;36629;36622:12;36573:2;36567:74;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\n\nimport './SquareVerifier.sol';\nimport './ERC721Mintable.sol';\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is ERC721MintableComplete, Verifier {\n    \n\n\n    // TODO define a solutions struct that can hold an index & an address\n    struct Solution {\n        uint256 index;\n        address solAddress;\n        bool minted;\n    }\n\n    // TODO define an array of the above struct\n    Solution[] solutions;\n\n    // TODO define a mapping to store unique solutions submitted\n    mapping(bytes32=>Solution) uniqueSolutions;\n\n    // TODO Create an event to emit when a solution is added\n    event SolutionAdded(address solutionAddress, uint256 solutionIndex);\n\n    Verifier private zkContract;\n    \n    constructor(address contractAddress, string memory name, string memory symbol)\n        ERC721MintableComplete(name, symbol)\n        public\n    {\n        zkContract  = Verifier(contractAddress);\n    }  \n\n\n    // TODO Create a function to add the solutions to the array and emit the event\n    function addSolution(address owner, bytes32 solHash) public {\n        uint256 newIndex = solutions.length;\n\n        Solution memory newSol = Solution(newIndex, owner, false);\n        solutions.push(newSol);\n        uniqueSolutions[solHash] = newSol;\n        \n        emit SolutionAdded(owner, newIndex);\n    }\n\n\n\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n    function mintVerifiedNFT(address tokenOwner, uint tokenId, Proof memory proof, uint[2] memory input) public {\n        require(zkContract.verifyTx(proof, input), \"Proof of ownership is not valid\");\n        \n        bytes32 solHash = getSolutionHash(proof, input);\n        require(uniqueSolutions[solHash].solAddress == address(0), \"Solution is not unique\");\n        \n        addSolution(tokenOwner, solHash);\n        mint(tokenOwner, tokenId);\n        uniqueSolutions[solHash].minted = true;\n    }\n\n    function getSolutionHash(Proof memory proof, uint[2] memory input) pure public returns (bytes32 solHash) {\n        solHash = keccak256(abi.encodePacked(\n            proof.a.X,\n            proof.a.Y, \n            proof.b.X, \n            proof.b.Y, \n            proof.c.X,\n            proof.c.Y,\n            input\n        ));\n    }\n  \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "/home/cryptonari/Documents/udacity/BDND/05_RealEstateMarketPlace/BDND_05_RealEstateMarketPlace/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7910
      ]
    },
    "id": 7911,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7724,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "id": 7725,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:6"
      },
      {
        "absolutePath": "project:/contracts/SquareVerifier.sol",
        "file": "./SquareVerifier.sol",
        "id": 7726,
        "nodeType": "ImportDirective",
        "scope": 7911,
        "sourceUnit": 8833,
        "src": "68:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7727,
        "nodeType": "ImportDirective",
        "scope": 7911,
        "sourceUnit": 1455,
        "src": "99:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7728,
              "name": "ERC721MintableComplete",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1454,
              "src": "371:22:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MintableComplete_$1454",
                "typeString": "contract ERC721MintableComplete"
              }
            },
            "id": 7729,
            "nodeType": "InheritanceSpecifier",
            "src": "371:22:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7730,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8832,
              "src": "395:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8832",
                "typeString": "contract Verifier"
              }
            },
            "id": 7731,
            "nodeType": "InheritanceSpecifier",
            "src": "395:8:6"
          }
        ],
        "contractDependencies": [
          397,
          471,
          517,
          1004,
          1302,
          1412,
          1454,
          7722,
          8832
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7910,
        "linearizedBaseContracts": [
          7910,
          8832,
          1454,
          1412,
          7722,
          1302,
          1004,
          517,
          471,
          397
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7738,
            "members": [
              {
                "constant": false,
                "id": 7733,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7738,
                "src": "517:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7732,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "517:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7735,
                "name": "solAddress",
                "nodeType": "VariableDeclaration",
                "scope": 7738,
                "src": "540:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7734,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "540:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7737,
                "name": "minted",
                "nodeType": "VariableDeclaration",
                "scope": 7738,
                "src": "568:11:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7736,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "568:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7910,
            "src": "491:95:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7741,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "640:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7738_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7739,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7738,
                "src": "640:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7738_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7740,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "640:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7738_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7745,
            "name": "uniqueSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "732:42:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7738_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7744,
              "keyType": {
                "id": 7742,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "740:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "732:26:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7738_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7743,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7738,
                "src": "749:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7738_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7751,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7747,
                  "indexed": false,
                  "name": "solutionAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7751,
                  "src": "862:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7749,
                  "indexed": false,
                  "name": "solutionIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 7751,
                  "src": "887:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "861:48:6"
            },
            "src": "842:68:6"
          },
          {
            "constant": false,
            "id": 7753,
            "name": "zkContract",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "916:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8832",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7752,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8832,
              "src": "916:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8832",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 7772,
              "nodeType": "Block",
              "src": "1097:56:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7766,
                      "name": "zkContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7753,
                      "src": "1107:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8832",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7768,
                          "name": "contractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7755,
                          "src": "1130:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7767,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8832,
                        "src": "1121:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$8832_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1121:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8832",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "1107:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$8832",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7771,
                  "nodeType": "ExpressionStatement",
                  "src": "1107:39:6"
                }
              ]
            },
            "documentation": null,
            "id": 7773,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7762,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7757,
                    "src": "1064:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7763,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7759,
                    "src": "1070:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7764,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7761,
                  "name": "ERC721MintableComplete",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1454,
                  "src": "1041:22:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721MintableComplete_$1454_$",
                    "typeString": "type(contract ERC721MintableComplete)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1041:36:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7755,
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7773,
                  "src": "966:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7757,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7773,
                  "src": "991:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7756,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "991:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7759,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 7773,
                  "src": "1011:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7758,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "965:67:6"
            },
            "returnParameters": {
              "id": 7765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1097:0:6"
            },
            "scope": 7910,
            "src": "954:199:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7810,
              "nodeType": "Block",
              "src": "1305:249:6",
              "statements": [
                {
                  "assignments": [
                    7781
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7781,
                      "name": "newIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 7810,
                      "src": "1315:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7780,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1315:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7784,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 7782,
                      "name": "solutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7741,
                      "src": "1334:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Solution_$7738_storage_$dyn_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                      }
                    },
                    "id": 7783,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1334:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1315:35:6"
                },
                {
                  "assignments": [
                    7786
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7786,
                      "name": "newSol",
                      "nodeType": "VariableDeclaration",
                      "scope": 7810,
                      "src": "1361:22:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7738_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7785,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7738,
                        "src": "1361:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7738_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7792,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7788,
                        "name": "newIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7781,
                        "src": "1395:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7789,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7775,
                        "src": "1405:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 7790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1412:5:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7787,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7738,
                      "src": "1386:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7738_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1386:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7738_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1361:57:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7796,
                        "name": "newSol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7786,
                        "src": "1443:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7738_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7738_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7793,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7741,
                        "src": "1428:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7738_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1428:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7738_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1428:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7798,
                  "nodeType": "ExpressionStatement",
                  "src": "1428:22:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7799,
                        "name": "uniqueSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7745,
                        "src": "1460:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7738_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7801,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7800,
                        "name": "solHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7777,
                        "src": "1476:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1460:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7738_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7802,
                      "name": "newSol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7786,
                      "src": "1487:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7738_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1460:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7738_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7804,
                  "nodeType": "ExpressionStatement",
                  "src": "1460:33:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7806,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7775,
                        "src": "1531:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7807,
                        "name": "newIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7781,
                        "src": "1538:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7805,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7751,
                      "src": "1517:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1517:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7809,
                  "nodeType": "EmitStatement",
                  "src": "1512:35:6"
                }
              ]
            },
            "documentation": null,
            "id": 7811,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7775,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 7811,
                  "src": "1266:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1266:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7777,
                  "name": "solHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 7811,
                  "src": "1281:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7776,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1265:32:6"
            },
            "returnParameters": {
              "id": 7779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1305:0:6"
            },
            "scope": 7910,
            "src": "1245:309:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7869,
              "nodeType": "Block",
              "src": "1891:388:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7827,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7817,
                            "src": "1929:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$8506_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7828,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7821,
                            "src": "1936:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$8506_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7825,
                            "name": "zkContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7753,
                            "src": "1909:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Verifier_$8832",
                              "typeString": "contract Verifier"
                            }
                          },
                          "id": 7826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyTx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8831,
                          "src": "1909:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$8506_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                          }
                        },
                        "id": 7829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1909:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f6f66206f66206f776e657273686970206973206e6f742076616c6964",
                        "id": 7830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1944:33:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_580ab29efb8c00c1460503ed8a354c84c7d8dac2eac6ce0af5fbce9b1125cad6",
                          "typeString": "literal_string \"Proof of ownership is not valid\""
                        },
                        "value": "Proof of ownership is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_580ab29efb8c00c1460503ed8a354c84c7d8dac2eac6ce0af5fbce9b1125cad6",
                          "typeString": "literal_string \"Proof of ownership is not valid\""
                        }
                      ],
                      "id": 7824,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8850,
                        8851
                      ],
                      "referencedDeclaration": 8851,
                      "src": "1901:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1901:77:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7832,
                  "nodeType": "ExpressionStatement",
                  "src": "1901:77:6"
                },
                {
                  "assignments": [
                    7834
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7834,
                      "name": "solHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 7869,
                      "src": "1997:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7833,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1997:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7839,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7836,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7817,
                        "src": "2031:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$8506_memory_ptr",
                          "typeString": "struct Verifier.Proof memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7837,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7821,
                        "src": "2038:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proof_$8506_memory_ptr",
                          "typeString": "struct Verifier.Proof memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "id": 7835,
                      "name": "getSolutionHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7909,
                      "src": "2015:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Proof_$8506_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2015:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1997:47:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7841,
                              "name": "uniqueSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7745,
                              "src": "2062:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7738_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7843,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7842,
                              "name": "solHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7834,
                              "src": "2078:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2062:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7738_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7844,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "solAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7735,
                          "src": "2062:35:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2109:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2101:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2101:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2062:49:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e206973206e6f7420756e69717565",
                        "id": 7849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2113:24:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                          "typeString": "literal_string \"Solution is not unique\""
                        },
                        "value": "Solution is not unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                          "typeString": "literal_string \"Solution is not unique\""
                        }
                      ],
                      "id": 7840,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8850,
                        8851
                      ],
                      "referencedDeclaration": 8851,
                      "src": "2054:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:84:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7851,
                  "nodeType": "ExpressionStatement",
                  "src": "2054:84:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7853,
                        "name": "tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7813,
                        "src": "2169:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7854,
                        "name": "solHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7834,
                        "src": "2181:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7852,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7811,
                      "src": "2157:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 7855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2157:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7856,
                  "nodeType": "ExpressionStatement",
                  "src": "2157:32:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7858,
                        "name": "tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7813,
                        "src": "2204:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7859,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7815,
                        "src": "2216:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7857,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1453,
                      "src": "2199:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2199:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7861,
                  "nodeType": "ExpressionStatement",
                  "src": "2199:25:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7862,
                          "name": "uniqueSolutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7745,
                          "src": "2234:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7738_storage_$",
                            "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7864,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7863,
                          "name": "solHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7834,
                          "src": "2250:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2234:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7738_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7865,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "minted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7737,
                      "src": "2234:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2268:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2234:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7868,
                  "nodeType": "ExpressionStatement",
                  "src": "2234:38:6"
                }
              ]
            },
            "documentation": null,
            "id": 7870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintVerifiedNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7813,
                  "name": "tokenOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 7870,
                  "src": "1808:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1808:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7815,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7870,
                  "src": "1828:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7814,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7817,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7870,
                  "src": "1842:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8506_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7816,
                    "name": "Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8506,
                    "src": "1842:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8506_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7821,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7870,
                  "src": "1862:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7818,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1862:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7820,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1867:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1862:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1807:76:6"
            },
            "returnParameters": {
              "id": 7823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1891:0:6"
            },
            "scope": 7910,
            "src": "1783:496:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7908,
              "nodeType": "Block",
              "src": "2390:224:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7881,
                      "name": "solHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7879,
                      "src": "2400:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7885,
                                  "name": "proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7872,
                                  "src": "2450:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proof_$8506_memory_ptr",
                                    "typeString": "struct Verifier.Proof memory"
                                  }
                                },
                                "id": 7886,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "a",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8501,
                                "src": "2450:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_G1Point_$7918_memory",
                                  "typeString": "struct Pairing.G1Point memory"
                                }
                              },
                              "id": 7887,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "X",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7915,
                              "src": "2450:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7888,
                                  "name": "proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7872,
                                  "src": "2473:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proof_$8506_memory_ptr",
                                    "typeString": "struct Verifier.Proof memory"
                                  }
                                },
                                "id": 7889,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "a",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8501,
                                "src": "2473:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_G1Point_$7918_memory",
                                  "typeString": "struct Pairing.G1Point memory"
                                }
                              },
                              "id": 7890,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Y",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7917,
                              "src": "2473:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7891,
                                  "name": "proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7872,
                                  "src": "2497:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proof_$8506_memory_ptr",
                                    "typeString": "struct Verifier.Proof memory"
                                  }
                                },
                                "id": 7892,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "b",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8503,
                                "src": "2497:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_G2Point_$7927_memory",
                                  "typeString": "struct Pairing.G2Point memory"
                                }
                              },
                              "id": 7893,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "X",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7922,
                              "src": "2497:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory",
                                "typeString": "uint256[2] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7894,
                                  "name": "proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7872,
                                  "src": "2521:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proof_$8506_memory_ptr",
                                    "typeString": "struct Verifier.Proof memory"
                                  }
                                },
                                "id": 7895,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "b",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8503,
                                "src": "2521:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_G2Point_$7927_memory",
                                  "typeString": "struct Pairing.G2Point memory"
                                }
                              },
                              "id": 7896,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Y",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7926,
                              "src": "2521:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory",
                                "typeString": "uint256[2] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7897,
                                  "name": "proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7872,
                                  "src": "2545:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proof_$8506_memory_ptr",
                                    "typeString": "struct Verifier.Proof memory"
                                  }
                                },
                                "id": 7898,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "c",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8505,
                                "src": "2545:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_G1Point_$7918_memory",
                                  "typeString": "struct Pairing.G1Point memory"
                                }
                              },
                              "id": 7899,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "X",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7915,
                              "src": "2545:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 7900,
                                  "name": "proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7872,
                                  "src": "2568:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proof_$8506_memory_ptr",
                                    "typeString": "struct Verifier.Proof memory"
                                  }
                                },
                                "id": 7901,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "c",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8505,
                                "src": "2568:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_G1Point_$7918_memory",
                                  "typeString": "struct Pairing.G1Point memory"
                                }
                              },
                              "id": 7902,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Y",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7917,
                              "src": "2568:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 7903,
                              "name": "input",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7876,
                              "src": "2591:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory",
                                "typeString": "uint256[2] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory",
                                "typeString": "uint256[2] memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 7883,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8834,
                              "src": "2420:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 7884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2420:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 7904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2420:186:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7882,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8841,
                        "src": "2410:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 7905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2410:197:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2400:207:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 7907,
                  "nodeType": "ExpressionStatement",
                  "src": "2400:207:6"
                }
              ]
            },
            "documentation": null,
            "id": 7909,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSolutionHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7872,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7909,
                  "src": "2310:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8506_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7871,
                    "name": "Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8506,
                    "src": "2310:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8506_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7876,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7909,
                  "src": "2330:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7873,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2330:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7875,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2335:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2330:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2309:42:6"
            },
            "returnParameters": {
              "id": 7880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7879,
                  "name": "solHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 7909,
                  "src": "2373:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7878,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2373:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2372:17:6"
            },
            "scope": 7910,
            "src": "2285:329:6",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7911,
        "src": "340:2279:6"
      }
    ],
    "src": "0:2645:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7910
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7724,
        "name": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7725,
        "name": "PragmaDirective",
        "src": "33:33:6"
      },
      {
        "attributes": {
          "SourceUnit": 8833,
          "absolutePath": "project:/contracts/SquareVerifier.sol",
          "file": "./SquareVerifier.sol",
          "scope": 7911,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7726,
        "name": "ImportDirective",
        "src": "68:30:6"
      },
      {
        "attributes": {
          "SourceUnit": 1455,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7911,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7727,
        "name": "ImportDirective",
        "src": "99:30:6"
      },
      {
        "attributes": {
          "contractDependencies": [
            397,
            471,
            517,
            1004,
            1302,
            1412,
            1454,
            7722,
            8832
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7910,
            8832,
            1454,
            1412,
            7722,
            1302,
            1004,
            517,
            471,
            397
          ],
          "name": "SolnSquareVerifier",
          "scope": 7911
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721MintableComplete",
                  "referencedDeclaration": 1454,
                  "type": "contract ERC721MintableComplete"
                },
                "id": 7728,
                "name": "UserDefinedTypeName",
                "src": "371:22:6"
              }
            ],
            "id": 7729,
            "name": "InheritanceSpecifier",
            "src": "371:22:6"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 8832,
                  "type": "contract Verifier"
                },
                "id": 7730,
                "name": "UserDefinedTypeName",
                "src": "395:8:6"
              }
            ],
            "id": 7731,
            "name": "InheritanceSpecifier",
            "src": "395:8:6"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7910,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7738,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7732,
                    "name": "ElementaryTypeName",
                    "src": "517:7:6"
                  }
                ],
                "id": 7733,
                "name": "VariableDeclaration",
                "src": "517:13:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "solAddress",
                  "scope": 7738,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7734,
                    "name": "ElementaryTypeName",
                    "src": "540:7:6"
                  }
                ],
                "id": 7735,
                "name": "VariableDeclaration",
                "src": "540:18:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "minted",
                  "scope": 7738,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7736,
                    "name": "ElementaryTypeName",
                    "src": "568:4:6"
                  }
                ],
                "id": 7737,
                "name": "VariableDeclaration",
                "src": "568:11:6"
              }
            ],
            "id": 7738,
            "name": "StructDefinition",
            "src": "491:95:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7910,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.Solution[]",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.Solution[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7738,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7739,
                    "name": "UserDefinedTypeName",
                    "src": "640:8:6"
                  }
                ],
                "id": 7740,
                "name": "ArrayTypeName",
                "src": "640:10:6"
              }
            ],
            "id": 7741,
            "name": "VariableDeclaration",
            "src": "640:20:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "uniqueSolutions",
              "scope": 7910,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7742,
                    "name": "ElementaryTypeName",
                    "src": "740:7:6"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7738,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7743,
                    "name": "UserDefinedTypeName",
                    "src": "749:8:6"
                  }
                ],
                "id": 7744,
                "name": "Mapping",
                "src": "732:26:6"
              }
            ],
            "id": 7745,
            "name": "VariableDeclaration",
            "src": "732:42:6"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "solutionAddress",
                      "scope": 7751,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7746,
                        "name": "ElementaryTypeName",
                        "src": "862:7:6"
                      }
                    ],
                    "id": 7747,
                    "name": "VariableDeclaration",
                    "src": "862:23:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "solutionIndex",
                      "scope": 7751,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7748,
                        "name": "ElementaryTypeName",
                        "src": "887:7:6"
                      }
                    ],
                    "id": 7749,
                    "name": "VariableDeclaration",
                    "src": "887:21:6"
                  }
                ],
                "id": 7750,
                "name": "ParameterList",
                "src": "861:48:6"
              }
            ],
            "id": 7751,
            "name": "EventDefinition",
            "src": "842:68:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "zkContract",
              "scope": 7910,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Verifier",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 8832,
                  "type": "contract Verifier"
                },
                "id": 7752,
                "name": "UserDefinedTypeName",
                "src": "916:8:6"
              }
            ],
            "id": 7753,
            "name": "VariableDeclaration",
            "src": "916:27:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 7910,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "contractAddress",
                      "scope": 7773,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7754,
                        "name": "ElementaryTypeName",
                        "src": "966:7:6"
                      }
                    ],
                    "id": 7755,
                    "name": "VariableDeclaration",
                    "src": "966:23:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 7773,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 7756,
                        "name": "ElementaryTypeName",
                        "src": "991:6:6"
                      }
                    ],
                    "id": 7757,
                    "name": "VariableDeclaration",
                    "src": "991:18:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "symbol",
                      "scope": 7773,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 7758,
                        "name": "ElementaryTypeName",
                        "src": "1011:6:6"
                      }
                    ],
                    "id": 7759,
                    "name": "VariableDeclaration",
                    "src": "1011:20:6"
                  }
                ],
                "id": 7760,
                "name": "ParameterList",
                "src": "965:67:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7765,
                "name": "ParameterList",
                "src": "1097:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1454,
                      "type": "type(contract ERC721MintableComplete)",
                      "value": "ERC721MintableComplete"
                    },
                    "id": 7761,
                    "name": "Identifier",
                    "src": "1041:22:6"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7757,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 7762,
                    "name": "Identifier",
                    "src": "1064:4:6"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7759,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 7763,
                    "name": "Identifier",
                    "src": "1070:6:6"
                  }
                ],
                "id": 7764,
                "name": "ModifierInvocation",
                "src": "1041:36:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Verifier"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7753,
                              "type": "contract Verifier",
                              "value": "zkContract"
                            },
                            "id": 7766,
                            "name": "Identifier",
                            "src": "1107:10:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract Verifier",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8832,
                                  "type": "type(contract Verifier)",
                                  "value": "Verifier"
                                },
                                "id": 7767,
                                "name": "Identifier",
                                "src": "1121:8:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7755,
                                  "type": "address",
                                  "value": "contractAddress"
                                },
                                "id": 7768,
                                "name": "Identifier",
                                "src": "1130:15:6"
                              }
                            ],
                            "id": 7769,
                            "name": "FunctionCall",
                            "src": "1121:25:6"
                          }
                        ],
                        "id": 7770,
                        "name": "Assignment",
                        "src": "1107:39:6"
                      }
                    ],
                    "id": 7771,
                    "name": "ExpressionStatement",
                    "src": "1107:39:6"
                  }
                ],
                "id": 7772,
                "name": "Block",
                "src": "1097:56:6"
              }
            ],
            "id": 7773,
            "name": "FunctionDefinition",
            "src": "954:199:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7910,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "owner",
                      "scope": 7811,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7774,
                        "name": "ElementaryTypeName",
                        "src": "1266:7:6"
                      }
                    ],
                    "id": 7775,
                    "name": "VariableDeclaration",
                    "src": "1266:13:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "solHash",
                      "scope": 7811,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7776,
                        "name": "ElementaryTypeName",
                        "src": "1281:7:6"
                      }
                    ],
                    "id": 7777,
                    "name": "VariableDeclaration",
                    "src": "1281:15:6"
                  }
                ],
                "id": 7778,
                "name": "ParameterList",
                "src": "1265:32:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7779,
                "name": "ParameterList",
                "src": "1305:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7781
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "newIndex",
                          "scope": 7810,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7780,
                            "name": "ElementaryTypeName",
                            "src": "1315:7:6"
                          }
                        ],
                        "id": 7781,
                        "name": "VariableDeclaration",
                        "src": "1315:16:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "length",
                          "referencedDeclaration": null,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7741,
                              "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                              "value": "solutions"
                            },
                            "id": 7782,
                            "name": "Identifier",
                            "src": "1334:9:6"
                          }
                        ],
                        "id": 7783,
                        "name": "MemberAccess",
                        "src": "1334:16:6"
                      }
                    ],
                    "id": 7784,
                    "name": "VariableDeclarationStatement",
                    "src": "1315:35:6"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7786
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "newSol",
                          "scope": 7810,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7738,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7785,
                            "name": "UserDefinedTypeName",
                            "src": "1361:8:6"
                          }
                        ],
                        "id": 7786,
                        "name": "VariableDeclaration",
                        "src": "1361:22:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct SolnSquareVerifier.Solution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7738,
                              "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                              "value": "Solution"
                            },
                            "id": 7787,
                            "name": "Identifier",
                            "src": "1386:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7781,
                              "type": "uint256",
                              "value": "newIndex"
                            },
                            "id": 7788,
                            "name": "Identifier",
                            "src": "1395:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7775,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 7789,
                            "name": "Identifier",
                            "src": "1405:5:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 7790,
                            "name": "Literal",
                            "src": "1412:5:6"
                          }
                        ],
                        "id": 7791,
                        "name": "FunctionCall",
                        "src": "1386:32:6"
                      }
                    ],
                    "id": 7792,
                    "name": "VariableDeclarationStatement",
                    "src": "1361:57:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solution_$7738_memory_ptr",
                                  "typeString": "struct SolnSquareVerifier.Solution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7741,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutions"
                                },
                                "id": 7793,
                                "name": "Identifier",
                                "src": "1428:9:6"
                              }
                            ],
                            "id": 7795,
                            "name": "MemberAccess",
                            "src": "1428:14:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7786,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "newSol"
                            },
                            "id": 7796,
                            "name": "Identifier",
                            "src": "1443:6:6"
                          }
                        ],
                        "id": 7797,
                        "name": "FunctionCall",
                        "src": "1428:22:6"
                      }
                    ],
                    "id": 7798,
                    "name": "ExpressionStatement",
                    "src": "1428:22:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7745,
                                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "uniqueSolutions"
                                },
                                "id": 7799,
                                "name": "Identifier",
                                "src": "1460:15:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7777,
                                  "type": "bytes32",
                                  "value": "solHash"
                                },
                                "id": 7800,
                                "name": "Identifier",
                                "src": "1476:7:6"
                              }
                            ],
                            "id": 7801,
                            "name": "IndexAccess",
                            "src": "1460:24:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7786,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "newSol"
                            },
                            "id": 7802,
                            "name": "Identifier",
                            "src": "1487:6:6"
                          }
                        ],
                        "id": 7803,
                        "name": "Assignment",
                        "src": "1460:33:6"
                      }
                    ],
                    "id": 7804,
                    "name": "ExpressionStatement",
                    "src": "1460:33:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7751,
                              "type": "function (address,uint256)",
                              "value": "SolutionAdded"
                            },
                            "id": 7805,
                            "name": "Identifier",
                            "src": "1517:13:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7775,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 7806,
                            "name": "Identifier",
                            "src": "1531:5:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7781,
                              "type": "uint256",
                              "value": "newIndex"
                            },
                            "id": 7807,
                            "name": "Identifier",
                            "src": "1538:8:6"
                          }
                        ],
                        "id": 7808,
                        "name": "FunctionCall",
                        "src": "1517:30:6"
                      }
                    ],
                    "id": 7809,
                    "name": "EmitStatement",
                    "src": "1512:35:6"
                  }
                ],
                "id": 7810,
                "name": "Block",
                "src": "1305:249:6"
              }
            ],
            "id": 7811,
            "name": "FunctionDefinition",
            "src": "1245:309:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintVerifiedNFT",
              "scope": 7910,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenOwner",
                      "scope": 7870,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7812,
                        "name": "ElementaryTypeName",
                        "src": "1808:7:6"
                      }
                    ],
                    "id": 7813,
                    "name": "VariableDeclaration",
                    "src": "1808:18:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7870,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 7814,
                        "name": "ElementaryTypeName",
                        "src": "1828:4:6"
                      }
                    ],
                    "id": 7815,
                    "name": "VariableDeclaration",
                    "src": "1828:12:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 7870,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Verifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Proof",
                          "referencedDeclaration": 8506,
                          "type": "struct Verifier.Proof"
                        },
                        "id": 7816,
                        "name": "UserDefinedTypeName",
                        "src": "1842:5:6"
                      }
                    ],
                    "id": 7817,
                    "name": "VariableDeclaration",
                    "src": "1842:18:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7870,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7818,
                            "name": "ElementaryTypeName",
                            "src": "1862:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7819,
                            "name": "Literal",
                            "src": "1867:1:6"
                          }
                        ],
                        "id": 7820,
                        "name": "ArrayTypeName",
                        "src": "1862:7:6"
                      }
                    ],
                    "id": 7821,
                    "name": "VariableDeclaration",
                    "src": "1862:20:6"
                  }
                ],
                "id": 7822,
                "name": "ParameterList",
                "src": "1807:76:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7823,
                "name": "ParameterList",
                "src": "1891:0:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_580ab29efb8c00c1460503ed8a354c84c7d8dac2eac6ce0af5fbce9b1125cad6",
                                  "typeString": "literal_string \"Proof of ownership is not valid\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8850,
                                8851
                              ],
                              "referencedDeclaration": 8851,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7824,
                            "name": "Identifier",
                            "src": "1901:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Proof_$8506_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "verifyTx",
                                  "referencedDeclaration": 8831,
                                  "type": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7753,
                                      "type": "contract Verifier",
                                      "value": "zkContract"
                                    },
                                    "id": 7825,
                                    "name": "Identifier",
                                    "src": "1909:10:6"
                                  }
                                ],
                                "id": 7826,
                                "name": "MemberAccess",
                                "src": "1909:19:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7817,
                                  "type": "struct Verifier.Proof memory",
                                  "value": "proof"
                                },
                                "id": 7827,
                                "name": "Identifier",
                                "src": "1929:5:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7821,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7828,
                                "name": "Identifier",
                                "src": "1936:5:6"
                              }
                            ],
                            "id": 7829,
                            "name": "FunctionCall",
                            "src": "1909:33:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "50726f6f66206f66206f776e657273686970206973206e6f742076616c6964",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Proof of ownership is not valid\"",
                              "value": "Proof of ownership is not valid"
                            },
                            "id": 7830,
                            "name": "Literal",
                            "src": "1944:33:6"
                          }
                        ],
                        "id": 7831,
                        "name": "FunctionCall",
                        "src": "1901:77:6"
                      }
                    ],
                    "id": 7832,
                    "name": "ExpressionStatement",
                    "src": "1901:77:6"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7834
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "solHash",
                          "scope": 7869,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7833,
                            "name": "ElementaryTypeName",
                            "src": "1997:7:6"
                          }
                        ],
                        "id": 7834,
                        "name": "VariableDeclaration",
                        "src": "1997:15:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Proof_$8506_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7909,
                              "type": "function (struct Verifier.Proof memory,uint256[2] memory) pure returns (bytes32)",
                              "value": "getSolutionHash"
                            },
                            "id": 7835,
                            "name": "Identifier",
                            "src": "2015:15:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7817,
                              "type": "struct Verifier.Proof memory",
                              "value": "proof"
                            },
                            "id": 7836,
                            "name": "Identifier",
                            "src": "2031:5:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7821,
                              "type": "uint256[2] memory",
                              "value": "input"
                            },
                            "id": 7837,
                            "name": "Identifier",
                            "src": "2038:5:6"
                          }
                        ],
                        "id": 7838,
                        "name": "FunctionCall",
                        "src": "2015:29:6"
                      }
                    ],
                    "id": 7839,
                    "name": "VariableDeclarationStatement",
                    "src": "1997:47:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                                  "typeString": "literal_string \"Solution is not unique\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8850,
                                8851
                              ],
                              "referencedDeclaration": 8851,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7840,
                            "name": "Identifier",
                            "src": "2054:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "solAddress",
                                  "referencedDeclaration": 7735,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7745,
                                          "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "uniqueSolutions"
                                        },
                                        "id": 7841,
                                        "name": "Identifier",
                                        "src": "2062:15:6"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7834,
                                          "type": "bytes32",
                                          "value": "solHash"
                                        },
                                        "id": 7842,
                                        "name": "Identifier",
                                        "src": "2078:7:6"
                                      }
                                    ],
                                    "id": 7843,
                                    "name": "IndexAccess",
                                    "src": "2062:24:6"
                                  }
                                ],
                                "id": 7844,
                                "name": "MemberAccess",
                                "src": "2062:35:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 7845,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "2101:7:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 7846,
                                    "name": "Literal",
                                    "src": "2109:1:6"
                                  }
                                ],
                                "id": 7847,
                                "name": "FunctionCall",
                                "src": "2101:10:6"
                              }
                            ],
                            "id": 7848,
                            "name": "BinaryOperation",
                            "src": "2062:49:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e206973206e6f7420756e69717565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution is not unique\"",
                              "value": "Solution is not unique"
                            },
                            "id": 7849,
                            "name": "Literal",
                            "src": "2113:24:6"
                          }
                        ],
                        "id": 7850,
                        "name": "FunctionCall",
                        "src": "2054:84:6"
                      }
                    ],
                    "id": 7851,
                    "name": "ExpressionStatement",
                    "src": "2054:84:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7811,
                              "type": "function (address,bytes32)",
                              "value": "addSolution"
                            },
                            "id": 7852,
                            "name": "Identifier",
                            "src": "2157:11:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7813,
                              "type": "address",
                              "value": "tokenOwner"
                            },
                            "id": 7853,
                            "name": "Identifier",
                            "src": "2169:10:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7834,
                              "type": "bytes32",
                              "value": "solHash"
                            },
                            "id": 7854,
                            "name": "Identifier",
                            "src": "2181:7:6"
                          }
                        ],
                        "id": 7855,
                        "name": "FunctionCall",
                        "src": "2157:32:6"
                      }
                    ],
                    "id": 7856,
                    "name": "ExpressionStatement",
                    "src": "2157:32:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1453,
                              "type": "function (address,uint256) returns (bool)",
                              "value": "mint"
                            },
                            "id": 7857,
                            "name": "Identifier",
                            "src": "2199:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7813,
                              "type": "address",
                              "value": "tokenOwner"
                            },
                            "id": 7858,
                            "name": "Identifier",
                            "src": "2204:10:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7815,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7859,
                            "name": "Identifier",
                            "src": "2216:7:6"
                          }
                        ],
                        "id": 7860,
                        "name": "FunctionCall",
                        "src": "2199:25:6"
                      }
                    ],
                    "id": 7861,
                    "name": "ExpressionStatement",
                    "src": "2199:25:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "minted",
                              "referencedDeclaration": 7737,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SolnSquareVerifier.Solution storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7745,
                                      "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                      "value": "uniqueSolutions"
                                    },
                                    "id": 7862,
                                    "name": "Identifier",
                                    "src": "2234:15:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7834,
                                      "type": "bytes32",
                                      "value": "solHash"
                                    },
                                    "id": 7863,
                                    "name": "Identifier",
                                    "src": "2250:7:6"
                                  }
                                ],
                                "id": 7864,
                                "name": "IndexAccess",
                                "src": "2234:24:6"
                              }
                            ],
                            "id": 7865,
                            "name": "MemberAccess",
                            "src": "2234:31:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 7866,
                            "name": "Literal",
                            "src": "2268:4:6"
                          }
                        ],
                        "id": 7867,
                        "name": "Assignment",
                        "src": "2234:38:6"
                      }
                    ],
                    "id": 7868,
                    "name": "ExpressionStatement",
                    "src": "2234:38:6"
                  }
                ],
                "id": 7869,
                "name": "Block",
                "src": "1891:388:6"
              }
            ],
            "id": 7870,
            "name": "FunctionDefinition",
            "src": "1783:496:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getSolutionHash",
              "scope": 7910,
              "stateMutability": "pure",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 7909,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Verifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Proof",
                          "referencedDeclaration": 8506,
                          "type": "struct Verifier.Proof"
                        },
                        "id": 7871,
                        "name": "UserDefinedTypeName",
                        "src": "2310:5:6"
                      }
                    ],
                    "id": 7872,
                    "name": "VariableDeclaration",
                    "src": "2310:18:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7909,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7873,
                            "name": "ElementaryTypeName",
                            "src": "2330:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7874,
                            "name": "Literal",
                            "src": "2335:1:6"
                          }
                        ],
                        "id": 7875,
                        "name": "ArrayTypeName",
                        "src": "2330:7:6"
                      }
                    ],
                    "id": 7876,
                    "name": "VariableDeclaration",
                    "src": "2330:20:6"
                  }
                ],
                "id": 7877,
                "name": "ParameterList",
                "src": "2309:42:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "solHash",
                      "scope": 7909,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7878,
                        "name": "ElementaryTypeName",
                        "src": "2373:7:6"
                      }
                    ],
                    "id": 7879,
                    "name": "VariableDeclaration",
                    "src": "2373:15:6"
                  }
                ],
                "id": 7880,
                "name": "ParameterList",
                "src": "2372:17:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bytes32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7879,
                              "type": "bytes32",
                              "value": "solHash"
                            },
                            "id": 7881,
                            "name": "Identifier",
                            "src": "2400:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8841,
                                  "type": "function (bytes memory) pure returns (bytes32)",
                                  "value": "keccak256"
                                },
                                "id": 7882,
                                "name": "Identifier",
                                "src": "2410:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_array$_t_uint256_$2_memory",
                                          "typeString": "uint256[2] memory"
                                        },
                                        {
                                          "typeIdentifier": "t_array$_t_uint256_$2_memory",
                                          "typeString": "uint256[2] memory"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                          "typeString": "uint256[2] memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "member_name": "encodePacked",
                                      "referencedDeclaration": null,
                                      "type": "function () pure returns (bytes memory)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 8834,
                                          "type": "abi",
                                          "value": "abi"
                                        },
                                        "id": 7883,
                                        "name": "Identifier",
                                        "src": "2420:3:6"
                                      }
                                    ],
                                    "id": 7884,
                                    "name": "MemberAccess",
                                    "src": "2420:16:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "X",
                                      "referencedDeclaration": 7915,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "a",
                                          "referencedDeclaration": 8501,
                                          "type": "struct Pairing.G1Point memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7872,
                                              "type": "struct Verifier.Proof memory",
                                              "value": "proof"
                                            },
                                            "id": 7885,
                                            "name": "Identifier",
                                            "src": "2450:5:6"
                                          }
                                        ],
                                        "id": 7886,
                                        "name": "MemberAccess",
                                        "src": "2450:7:6"
                                      }
                                    ],
                                    "id": 7887,
                                    "name": "MemberAccess",
                                    "src": "2450:9:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "Y",
                                      "referencedDeclaration": 7917,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "a",
                                          "referencedDeclaration": 8501,
                                          "type": "struct Pairing.G1Point memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7872,
                                              "type": "struct Verifier.Proof memory",
                                              "value": "proof"
                                            },
                                            "id": 7888,
                                            "name": "Identifier",
                                            "src": "2473:5:6"
                                          }
                                        ],
                                        "id": 7889,
                                        "name": "MemberAccess",
                                        "src": "2473:7:6"
                                      }
                                    ],
                                    "id": 7890,
                                    "name": "MemberAccess",
                                    "src": "2473:9:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "X",
                                      "referencedDeclaration": 7922,
                                      "type": "uint256[2] memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "b",
                                          "referencedDeclaration": 8503,
                                          "type": "struct Pairing.G2Point memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7872,
                                              "type": "struct Verifier.Proof memory",
                                              "value": "proof"
                                            },
                                            "id": 7891,
                                            "name": "Identifier",
                                            "src": "2497:5:6"
                                          }
                                        ],
                                        "id": 7892,
                                        "name": "MemberAccess",
                                        "src": "2497:7:6"
                                      }
                                    ],
                                    "id": 7893,
                                    "name": "MemberAccess",
                                    "src": "2497:9:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "Y",
                                      "referencedDeclaration": 7926,
                                      "type": "uint256[2] memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "b",
                                          "referencedDeclaration": 8503,
                                          "type": "struct Pairing.G2Point memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7872,
                                              "type": "struct Verifier.Proof memory",
                                              "value": "proof"
                                            },
                                            "id": 7894,
                                            "name": "Identifier",
                                            "src": "2521:5:6"
                                          }
                                        ],
                                        "id": 7895,
                                        "name": "MemberAccess",
                                        "src": "2521:7:6"
                                      }
                                    ],
                                    "id": 7896,
                                    "name": "MemberAccess",
                                    "src": "2521:9:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "X",
                                      "referencedDeclaration": 7915,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "c",
                                          "referencedDeclaration": 8505,
                                          "type": "struct Pairing.G1Point memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7872,
                                              "type": "struct Verifier.Proof memory",
                                              "value": "proof"
                                            },
                                            "id": 7897,
                                            "name": "Identifier",
                                            "src": "2545:5:6"
                                          }
                                        ],
                                        "id": 7898,
                                        "name": "MemberAccess",
                                        "src": "2545:7:6"
                                      }
                                    ],
                                    "id": 7899,
                                    "name": "MemberAccess",
                                    "src": "2545:9:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "Y",
                                      "referencedDeclaration": 7917,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "c",
                                          "referencedDeclaration": 8505,
                                          "type": "struct Pairing.G1Point memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7872,
                                              "type": "struct Verifier.Proof memory",
                                              "value": "proof"
                                            },
                                            "id": 7900,
                                            "name": "Identifier",
                                            "src": "2568:5:6"
                                          }
                                        ],
                                        "id": 7901,
                                        "name": "MemberAccess",
                                        "src": "2568:7:6"
                                      }
                                    ],
                                    "id": 7902,
                                    "name": "MemberAccess",
                                    "src": "2568:9:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7876,
                                      "type": "uint256[2] memory",
                                      "value": "input"
                                    },
                                    "id": 7903,
                                    "name": "Identifier",
                                    "src": "2591:5:6"
                                  }
                                ],
                                "id": 7904,
                                "name": "FunctionCall",
                                "src": "2420:186:6"
                              }
                            ],
                            "id": 7905,
                            "name": "FunctionCall",
                            "src": "2410:197:6"
                          }
                        ],
                        "id": 7906,
                        "name": "Assignment",
                        "src": "2400:207:6"
                      }
                    ],
                    "id": 7907,
                    "name": "ExpressionStatement",
                    "src": "2400:207:6"
                  }
                ],
                "id": 7908,
                "name": "Block",
                "src": "2390:224:6"
              }
            ],
            "id": 7909,
            "name": "FunctionDefinition",
            "src": "2285:329:6"
          }
        ],
        "id": 7910,
        "name": "ContractDefinition",
        "src": "340:2279:6"
      }
    ],
    "id": 7911,
    "name": "SourceUnit",
    "src": "0:2645:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x6d5e7bf8FE4D81372e3f790fF70adee8f1E762D4",
      "transactionHash": "0x11aa1c10ac992737ddb5cdfe5f9ed366d0140f6800c21f22894971f3953c05ad"
    },
    "1645727641006": {
      "events": {},
      "links": {},
      "address": "0x4711a8dC17aE6c0a47c400fC6889aB0FD4EE8293",
      "transactionHash": "0xf948be82aea47166cd19e9e94e346d469a15fec4c7ef83706d48955290afd9e7"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-02-26T12:38:05.582Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}